/****************************************************************
Copyright (C) Lucent Technologies 1997
All Rights Reserved

Permission to use, copy, modify, and distribute this software and
its documentation for any purpose and without fee is hereby
granted, provided that the above copyright notice appear in all
copies and that both that the copyright notice and this
permission notice and warranty disclaimer appear in supporting
documentation, and that the name Lucent Technologies or any of
its entities not be used in advertising or publicity pertaining
to distribution of the software without specific, written prior
permission.

LUCENT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.
IN NO EVENT SHALL LUCENT OR ANY OF ITS ENTITIES BE LIABLE FOR ANY
SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
THIS SOFTWARE.
****************************************************************/


#ifndef lint
static const char yysccsid[] = "@(#)yaccpar  1.9 (Berkeley) 02/21/93";
#endif

#include <stdlib.h>
#include <string.h>

#define YYBYACC 1
#define YYMAJOR 1
#define YYMINOR 9
#define YYPATCH 20100216

#define YYEMPTY    (-1)
#define yyclearin    (yychar = YYEMPTY)
#define yyerrok    (yyerrflag = 0)
#define YYRECOVERING() (yyerrflag != 0)

#define YYPREFIX "yy"

/* compatibility with bison */
#ifdef YYPARSE_PARAM
/* compatibility with FreeBSD */
#ifdef YYPARSE_PARAM_TYPE
#define YYPARSE_DECL() yyparse(YYPARSE_PARAM_TYPE YYPARSE_PARAM)
#else
#define YYPARSE_DECL() yyparse(void *YYPARSE_PARAM)
#endif
#else
#define YYPARSE_DECL() yyparse(void)
#endif /* YYPARSE_PARAM */

extern int YYPARSE_DECL();

#line 26 "awkgram.y"
#include <stdio.h>
#include <string.h>
#include <errno.h>

void checkdup(Node *list, Cell *item);
int yywrap(void) { return(1); }

Node  *beginloc = 0;
Node  *endloc = 0;
int  infunc  = 0;  /* = 1 if in arglist or body of func */
int  inloop  = 0;  /* = 1 if in while, for, do */
char  *curfname = 0;  /* current function name */
Node  *arglist = 0;  /* list of args for current function */
#line 42 "awkgram.y"
typedef union {
  Node  *p;
  Cell  *cp;
  int  i;
  char  *s;
} YYSTYPE;
#line 56 "y.tab.c"
#define FIRSTTOKEN 257
#define PROGRAM 258
#define PASTAT 259
#define PASTAT2 260
#define XBEGIN 261
#define XEND 262
#define NL 263
#define ARRAY 264
#define MATCH 265
#define NOTMATCH 266
#define MATCHOP 267
#define FINAL 268
#define DOT 269
#define ALL 270
#define CCL 271
#define NCCL 272
#define CHAR 273
#define OR 274
#define STAR 275
#define QUEST 276
#define PLUS 277
#define EMPTYRE 278
#define AND 279
#define BOR 280
#define BITOR 281
#define BITAND 282
#define BITCOMPL 283
#define BITLSHIFT 284
#define BITRSHIFT 285
#define BITXOR 286
#define APPEND 287
#define EQ 288
#define GE 289
#define GT 290
#define LE 291
#define LT 292
#define NE 293
#define IN 294
#define ARG 295
#define BLTIN 296
#define BREAK 297
#define CLOSE 298
#define CONTINUE 299
#define DELETE 300
#define DO 301
#define EXIT 302
#define FOR 303
#define FUNC 304
#define SUB 305
#define GSUB 306
#define IF 307
#define INDEX 308
#define LSUBSTR 309
#define MATCHFCN 310
#define NEXT 311
#define NEXTFILE 312
#define ADD 313
#define MINUS 314
#define MULT 315
#define DIVIDE 316
#define MOD 317
#define ASSIGN 318
#define ASGNOP 319
#define ADDEQ 320
#define SUBEQ 321
#define MULTEQ 322
#define DIVEQ 323
#define MODEQ 324
#define POWEQ 325
#define PRINT 326
#define PRINTF 327
#define SPRINTF 328
#define ELSE 329
#define INTEST 330
#define CONDEXPR 331
#define POSTINCR 332
#define PREINCR 333
#define POSTDECR 334
#define PREDECR 335
#define VAR 336
#define IVAR 337
#define VARNF 338
#define CALL 339
#define NUMBER 340
#define STRING 341
#define VARERR 342
#define REGEXPR 343
#define GETLINE 344
#define RETURN 345
#define SPLIT 346
#define SUBSTR 347
#define WHILE 348
#define CAT 349
#define NOT 350
#define UMINUS 351
#define POWER 352
#define DECR 353
#define INCR 354
#define INDIRECT 355
#define LASTTOKEN 356
#define YYERRCODE 256

static char *printname[100] = {
  (char *) "FIRSTTOKEN",  /* 257 */
  (char *) "PROGRAM",  /* 258 */
  (char *) "PASTAT",  /* 259 */
  (char *) "PASTAT2",  /* 260 */
  (char *) "XBEGIN",  /* 261 */
  (char *) "XEND",  /* 262 */
  (char *) "NL",  /* 263 */
  (char *) "ARRAY",  /* 264 */
  (char *) "MATCH",  /* 265 */
  (char *) "NOTMATCH",  /* 266 */
  (char *) "MATCHOP",  /* 267 */
  (char *) "FINAL",  /* 268 */
  (char *) "DOT",  /* 269 */
  (char *) "ALL",  /* 270 */
  (char *) "CCL",  /* 271 */
  (char *) "NCCL",  /* 272 */
  (char *) "CHAR",  /* 273 */
  (char *) "OR",  /* 274 */
  (char *) "STAR",  /* 275 */
  (char *) "QUEST",  /* 276 */
  (char *) "PLUS",  /* 277 */
  (char *) "EMPTYRE",  /* 278 */
  (char *) "AND",  /* 279 */
  (char *) "BOR",  /* 280 */
  (char *) "BITOR",  /* 281 */
  (char *) "BITAND",  /* 282 */
  (char *) "BITCOMPL",  /* 283 */
  (char *) "BITLSHIFT",  /* 284 */
  (char *) "BITRSHIFT",  /* 285 */
  (char *) "BITXOR",  /* 286 */
  (char *) "APPEND",  /* 287 */
  (char *) "EQ",  /* 288 */
  (char *) "GE",  /* 289 */
  (char *) "GT",  /* 290 */
  (char *) "LE",  /* 291 */
  (char *) "LT",  /* 292 */
  (char *) "NE",  /* 293 */
  (char *) "IN",  /* 294 */
  (char *) "ARG",  /* 295 */
  (char *) "BLTIN",  /* 296 */
  (char *) "BREAK",  /* 297 */
  (char *) "CLOSE",  /* 298 */
  (char *) "CONTINUE",  /* 299 */
  (char *) "DELETE",  /* 300 */
  (char *) "DO",  /* 301 */
  (char *) "EXIT",  /* 302 */
  (char *) "FOR",  /* 303 */
  (char *) "FUNC",  /* 304 */
  (char *) "SUB",  /* 305 */
  (char *) "GSUB",  /* 306 */
  (char *) "IF",  /* 307 */
  (char *) "INDEX",  /* 308 */
  (char *) "LSUBSTR",  /* 309 */
  (char *) "MATCHFCN",  /* 310 */
  (char *) "NEXT",  /* 311 */
  (char *) "NEXTFILE",  /* 312 */
  (char *) "ADD",  /* 313 */
  (char *) "MINUS",  /* 314 */
  (char *) "MULT",  /* 315 */
  (char *) "DIVIDE",  /* 316 */
  (char *) "MOD",  /* 317 */
  (char *) "ASSIGN",  /* 318 */
  (char *) "ASGNOP",  /* 319 */
  (char *) "ADDEQ",  /* 320 */
  (char *) "SUBEQ",  /* 321 */
  (char *) "MULTEQ",  /* 322 */
  (char *) "DIVEQ",  /* 323 */
  (char *) "MODEQ",  /* 324 */
  (char *) "POWEQ",  /* 325 */
  (char *) "PRINT",  /* 326 */
  (char *) "PRINTF",  /* 327 */
  (char *) "SPRINTF",  /* 328 */
  (char *) "ELSE",  /* 329 */
  (char *) "INTEST",  /* 330 */
  (char *) "CONDEXPR",  /* 331 */
  (char *) "POSTINCR",  /* 332 */
  (char *) "PREINCR",  /* 333 */
  (char *) "POSTDECR",  /* 334 */
  (char *) "PREDECR",  /* 335 */
  (char *) "VAR",  /* 336 */
  (char *) "IVAR",  /* 337 */
  (char *) "VARNF",  /* 338 */
  (char *) "CALL",  /* 339 */
  (char *) "NUMBER",  /* 340 */
  (char *) "STRING",  /* 341 */
  (char *) "VARERR",  /* 342 */
  (char *) "REGEXPR",  /* 343 */
  (char *) "GETLINE",  /* 344 */
  (char *) "RETURN",  /* 345 */
  (char *) "SPLIT",  /* 346 */
  (char *) "SUBSTR",  /* 347 */
  (char *) "WHILE",  /* 348 */
  (char *) "CAT",  /* 349 */
  (char *) "NOT",  /* 350 */
  (char *) "UMINUS",  /* 351 */
  (char *) "POWER",  /* 352 */
  (char *) "DECR",  /* 353 */
  (char *) "INCR",  /* 354 */
  (char *) "INDIRECT",  /* 355 */
  (char *) "LASTTOKEN",  /* 356 */
};

Cell *(*proctab[100])(Node **, int) = {
  nullproc,  /* FIRSTTOKEN */
  program,  /* PROGRAM */
  pastat,  /* PASTAT */
  dopa2,  /* PASTAT2 */
  nullproc,  /* XBEGIN */
  nullproc,  /* XEND */
  nullproc,  /* NL */
  array,  /* ARRAY */
  matchop,  /* MATCH */
  matchop,  /* NOTMATCH */
  nullproc,  /* MATCHOP */
  nullproc,  /* FINAL */
  nullproc,  /* DOT */
  nullproc,  /* ALL */
  nullproc,  /* CCL */
  nullproc,  /* NCCL */
  nullproc,  /* CHAR */
  nullproc,  /* OR */
  nullproc,  /* STAR */
  nullproc,  /* QUEST */
  nullproc,  /* PLUS */
  nullproc,  /* EMPTYRE */
  boolop,  /* AND */
  boolop,  /* BOR */
  bitops,  /* BITOR */
  bitops,  /* BITAND */
  bitops,  /* BITCOMPL */
  bitops,  /* BITLSHIFT */
  bitops,  /* BITRSHIFT */
  bitops,  /* BITXOR */
  nullproc,  /* APPEND */
  relop,  /* EQ */
  relop,  /* GE */
  relop,  /* GT */
  relop,  /* LE */
  relop,  /* LT */
  relop,  /* NE */
  instat,  /* IN */
  arg,  /* ARG */
  bltin,  /* BLTIN */
  jump,  /* BREAK */
  closefile,  /* CLOSE */
  jump,  /* CONTINUE */
  awkdelete,  /* DELETE */
  dostat,  /* DO */
  jump,  /* EXIT */
  forstat,  /* FOR */
  nullproc,  /* FUNC */
  sub,  /* SUB */
  gsub,  /* GSUB */
  ifstat,  /* IF */
  sindex,  /* INDEX */
  nullproc,  /* LSUBSTR */
  matchop,  /* MATCHFCN */
  jump,  /* NEXT */
  jump,  /* NEXTFILE */
  arith,  /* ADD */
  arith,  /* MINUS */
  arith,  /* MULT */
  arith,  /* DIVIDE */
  arith,  /* MOD */
  assign,  /* ASSIGN */
  nullproc,  /* ASGNOP */
  assign,  /* ADDEQ */
  assign,  /* SUBEQ */
  assign,  /* MULTEQ */
  assign,  /* DIVEQ */
  assign,  /* MODEQ */
  assign,  /* POWEQ */
  printstat,  /* PRINT */
  awkprintf,  /* PRINTF */
  awksprintf,  /* SPRINTF */
  nullproc,  /* ELSE */
  intest,  /* INTEST */
  condexpr,  /* CONDEXPR */
  incrdecr,  /* POSTINCR */
  incrdecr,  /* PREINCR */
  incrdecr,  /* POSTDECR */
  incrdecr,  /* PREDECR */
  nullproc,  /* VAR */
  nullproc,  /* IVAR */
  getnf,  /* VARNF */
  call,  /* CALL */
  nullproc,  /* NUMBER */
  nullproc,  /* STRING */
  geterrno,  /* VARERR */
  nullproc,  /* REGEXPR */
  awkgetline,  /* GETLINE */
  jump,  /* RETURN */
  split,  /* SPLIT */
  substr,  /* SUBSTR */
  whilestat,  /* WHILE */
  cat,  /* CAT */
  boolop,  /* NOT */
  arith,  /* UMINUS */
  arith,  /* POWER */
  nullproc,  /* DECR */
  nullproc,  /* INCR */
  indirect,  /* INDIRECT */
  nullproc,  /* LASTTOKEN */
};

char *tokname(int n)
{
  static char buf[100];

  if (n < FIRSTTOKEN || n > LASTTOKEN) {
    sprintf(buf, "token %d", n);
    return buf;
  }
  return printname[n-FIRSTTOKEN];
}

static const short yylhs[] = {               -1,
  0,  0,   36,   36,   37,   37,   38,   38,   38,   38,
   38,   38,   33,   33,   26,   26,   24,   24,   41,   22,
   42,   22,   43,   22,   20,   20,   23,   30,   30,   34,
   34,   35,   35,   29,   29,   15,   15,  1,  1,   10,
   11,   11,   11,   11,   11,   11,   11,   44,   11,   12,
   12,  6,  6,  3,  3,  3,  3,  3,  3,  3,
  3,  3,  3,  3,  2,  2,  2,  2,  2,  2,
  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
  2,  2,  2,  4,  4,  5,  5,  7,  7,  7,
   40,   40,   28,   28,   28,   28,   31,   31,  9,  9,
   45,   13,   32,   32,   14,   14,   14,   14,   14,   14,
   14,   14,   27,   27,   16,   16,   46,   47,   16,   16,
   16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
   48,   16,   16,   16,   17,   17,   39,   39,  8,  8,
  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
  8,  8,   18,   18,   18,   18,   21,   21,   21,   19,
   19,   19,   19,   25,
};
static const short yylen[] = {              2,
  1,  1,  1,  2,  1,  2,  1,  1,  1,  1,
  1,  1,  1,  2,  1,  2,  1,  2,  0,   12,
  0,   10,  0,  8,  1,  1,  4,  1,  2,  1,
  2,  0,  1,  0,  1,  0,  1,  1,  3,  1,
  1,  4,  4,  7,  3,  4,  4,  0,  9,  1,
  3,  1,  3,  3,  5,  3,  3,  3,  3,  3,
  5,  2,  1,  1,  3,  5,  3,  3,  3,  3,
  3,  3,  3,  3,  3,  3,  3,  5,  4,  3,
  2,  1,  1,  3,  3,  1,  3,  0,  1,  3,
  1,  1,  1,  1,  2,  2,  1,  2,  1,  2,
  0,  4,  1,  2,  4,  4,  4,  2,  5,  2,
  1,  1,  1,  2,  2,  2,  0,  0,  9,  3,
  2,  1,  4,  2,  3,  2,  2,  3,  2,  2,
  0,  3,  2,  2,  1,  2,  1,  1,  4,  3,
  3,  3,  3,  3,  3,  2,  2,  2,  3,  4,
  1,  3,  4,  2,  2,  2,  2,  2,  4,  3,
  2,  1,  6,  4,  6,  6,  3,  6,  6,  1,
  8,  8,  6,  4,  1,  6,  6,  8,  8,  8,
  6,  1,  1,  4,  1,  2,  0,  1,  3,  1,
  1,  1,  1,  4,
};
static const short yydefred[] = {             0,
  2,   93,   94,  0,  1,  0,  0,   95,   96,  0,
  0,   28,  0,  101,  7,  8,  0,   11,   10,   12,
  191,  0,  0,  0,  137,  138,  0,  0,  0,  190,
  185,  192,  0,  170,  175,  193,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,   82,  0,   50,
  0,   99,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   25,   26,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  100,  155,  156,  186,  0,  0,  3,  5,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  157,  158,  0,  112,   29,  0,  0,  0,  0,
   15,  0,  0,  0,  0,  0,   91,   92,  0,  0,
  0,  0,  0,  135,  0,  122,  0,  131,  0,  0,
  0,  0,  0,  0,  0,   13,  167,  0,  0,  0,
  0,  0,  149,  0,  0,  0,  0,  0,  0,  0,
  152,  0,  0,  0,  0,  0,  0,  0,   75,  0,
  0,  0,  0,  0,  0,   77,  0,  4,  0,  6,
  0,  0,  0,  0,  0,  0,  0,  0,   30,  0,
  0,  0,   51,  0,  0,  133,  0,  115,  0,  116,
  0,  0,  121,  0,  0,  126,  127,  134,  0,  129,
  0,  130,   45,  136,  0,  0,   16,  0,  0,  0,
  0,  0,  0,  0,   63,  0,  0,  0,  0,   46,
   47,   14,  0,  0,  0,  102,  164,  150,  0,  188,
  0,  0,  0,  174,  153,  0,  0,  0,   79,  0,
  0,   31,  0,   42,  184,  114,  0,  120,   37,  0,
  0,  0,  128,  0,   17,  0,  132,  118,   97,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   78,  0,  103,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   18,  123,  0,   98,  0,  0,  0,
   58,   60,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  104,  0,  189,  165,  166,  169,  168,
  173,  0,  181,  0,  0,  109,  0,  0,  0,  0,
  0,  0,  0,  163,  177,  0,  176,  0,  0,  0,
  0,  0,   44,  0,  0,  0,  0,   61,  0,  0,
  0,  0,  0,  171,  172,  180,  0,  0,  0,  0,
  179,  178,   49,  0,  0,   24,  0,  0,  0,  119,
   22,  0,  0,   20,
};
static const short yydgoto[] = {              4,
  5,  132,  221,   61,  222,  155,  223,   47,   48,   49,
   50,   51,   52,  133,  260,  134,  135,   53,   54,   71,
  241,  136,  137,  266,  138,  139,  198,  6,  7,  140,
  270,  289,  239,  199,  191,  100,  101,   56,   57,  141,
  383,  378,  369,  325,   62,  218,  306,  216,
};
static const short yysindex[] = {             -55,
  0,  0,  0,  0,  0,  -57, 8934,  0,  0,  -90,
  -90,  0,10035,  0,  0,  0,   -3,  0,  0,  0,
  0,   39, 6751, -273,  0,  0,   65,   71,   87,  0,
  0,  0,   91,  0,  0,  0,  292,   92,  106, 6751,
 6751,10115, -208, -208, 6751, 8299,  -37,  0,  -10,  0,
  -40,  0, -167,  -56, 4994,  144,  148, 4994, 4994, 6674,
   32, -271,10035, 9374,10035, 6751,  -37, -232,  0,  0,
  150,10035,10035,10035, 9459, 6751, -176,10035,10035, -216,
 -216, -216,  0,  0,  0,  0, -173,10035,  0,  0,
10035,10035,10035,10035,10035,10035, -138,10035,  -37, 9541,
 9621,10200, 6751, 6751, 6751, 6751, 6751, -103, 4994, 8934,
10035,  0,  0,10035,  0,  0, -103,  -35,  -35, -138,
  0, 9188,  152,  163,  -35,  -35,  0,  0,  -35, 9188,
  174, 8299,  -35,  0, 5101,  0, 6046,  0,  -33, 4994,
10282,10035,10035, 5227, 5334,  0,  0, 9706,  -72, 9706,
  177, 7217,  0, 8299,   47, 7308, -110, 7404, 7404,   57,
  0,   76,  -37, 6751, 7404, 7404, -208, 1335,  0, 1335,
 1335, 1335, 1335, 1335, 1335,  0, 7486,  0, 8757,  0,
 8661, 6751, -216,  -26,  -26, -216, -216, -216,  0,  -23,
10035, 5421,  0, 8299,  -13,  0, -103,  0,  -23,  0,
  154, 6864,  0, 9021,10035,  0,  0,  0, 6864,  0,
10035,  0,  0,  0,  -70, 6046,  0, 6046, 5500,10035,
 9103,  223,  -94,  -37,  0, -143, 7404, 7404,  223,  0,
  0,  0, 8299, -138, 8299,  0,  0,  0, 9706,  0,
  120, 9706, 9706,  0,  0,  -37,   69, 9706,  0,10035,
  -37,  0,  -90,  0,  0,  0,10035,  0,  0,  214,
  -76, 7579,  0, 7579,  0, 5607,  0,  0,  0,   15,
  125,10362, -138,10362,  -37, 9788, 9868, 9953, 6751,10362,
10362,10362, 9706, 9706, 9706,  0, 8299,  0,   16, -213,
 7675,  261, 7757,  262,  131, 6946, 8299, 4994,   14,  -32,
 -138,   16,   16,  0,  0,  -38,  0,   18,10035, 1335,
  0,  0, 2902, 2978, 9269, 9103,  -37, 9103, 9103, 9103,
 7850, 7037, 7135,  0,  -90,  0,  0,  0,  0,  0,
  0, 9706,  0, 9706, 5694,  0, -103,10035,  273,  276,
 -138,  137,10362,  0,  0, -121,  0, -121, 4994, 7946,
  282, 8028,  0, 9021, 8121,   16,10035,  0,   18, 9103,
  287,  293, 5773,  0,  0,  0,  273, -103, 6046, 8217,
  0,  0,  0,   16, 9021,  0,  -35, 6046,  273,  0,
  0,   16, 6046,  0,
};
static const short yyrindex[] = {            2721,
  0,  0,  0,  0,  0, 2808,  350,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   96,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0, 3080,  0,  0,  0,
  0,  0,  0,  0,  0,  566, 2255,  0, 2528,  0,
 2721,  0, 1473,  1,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0, 1786, 1263,  0,  0,
  0,  0,  0,  0,  0,  0,  207,  0,  0,  417,
  527,  623,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0, 2403,  0,
  0,  0,  0,  0,  0,  0,  0,10447,  0,  352,
  0,  0,  0,  0,  0,  0, 4661,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0, 4288,  0,
  0,  -27,  0,  0,  0,  0,  0,  0, 6121,  0,
  -34,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   33,  0,  0,  280,  0,  0,  0,
  0,  0, 1938,  0,  0,  0, 3174, 2729,  0, 3351,
 3646, 3937, 4119, 4186, 4260,  0,  0,  0,   56,  0,
  595,  0,  737, 1576, 1679,  943, 1057, 1153,  0, 4574,
  0,  0,  0,  104,  0,  0, 4661,  0, 4784,  0,
   -5,  0,  0,  302,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0, 5927,  0,  0,  0,  0,  0,
  479,  842,   -2, 8488,  0, 4473,  0,  0, 8390,  0,
  0,  0,  281,  0,  305,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0, 2045,  0,  0,  0,  0,
 2144,  0, 2631,  0,  0,  0,  0,  0,  0,  0,
 4377,  0,  0,  0,  0,  0,  0,  0,  0, 4894,
  0,  0,  0,  0, 8570,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   51,  0,  239,  0,
  0, 8390,  0, 8390,  0,  0,  109,  0,  0,10447,
  0, 6200, 6275,  0,  0,  0,  0,  881,  0, 3384,
  0,  0,  0,  563,  136,  879,  6,  8,   12,   11,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0, 8844,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 8390,  0,  0,  327,  0, 6394,  0,  0,  0,  475,
  0,  0,  0,  0,  0,  0,  0, 8844,  0,  0,
  0,  0,  0, 6473,  327,  0,  0,  0,  0,  0,
  0, 6548,  0,  0,
};
static const short yygindex[] = {             0,
  0, 3468,  301, -191,  0,  -52,  0, 3974,  -39,  178,
  263,  0,  -60, -184, -314, 2437,  -41, 3689,  835,  0,
  0,  0,  0,  0,  0,  0,  -44,  0,  323,  2,
  0, -154, 5265,  -24,  -91,  278,  841,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,
};
#define YYTABLESIZE 10802
static const short yytable[] = {            106,
  183,  9,   83,  3,  105,  103,   88,  104,   55,  102,
  106,   58,   59,  111,  114,  105,  144,  145,  3,  259,
  102,  160,  162,  197,   88,  196,  337,  169,  271,  279,
  146,  111,   12,  108,  114,  110,   63,  183,  108,  367,
  183,  183,  183,  183,  183,  183,  105,  183,  106,  232,
  109,   54,  107,  110,   54,   68,  108,  146,  183,  183,
  379,  195,   69,  183,  105,   70,  106,  192,   54,   54,
  107,  151,  149,   52,  200,  146,   52,  203,   64,  255,
  206,  207,  229,  190,  208,  210,   21,  238,  212,   88,
  146,   53,  190,  183,   53,  151,   68,  244,  219,   68,
  146,  225,   68,   65,   72,  256,  336,  302,   66,  303,
   73,   55,   12,   68,   68,  164,  245,  342,   68,  146,
  112,  113,  326,  183,  183,   52,   74,   30,   31,   32,
   75,   78,  151,   36,   54,  107,  151,  151,  151,  151,
  151,  232,  151,   53,   65,   79,   45,   65,   68,   66,
   65,  111,   66,  151,  151,   66,   21,  258,  151,  189,
  288,   65,   65,  146,  263,  308,   66,   66,  146,  259,
  167,  331,  190,   21,  146,  282,   56,  359,   68,   56,
  146,  292,  294,  142,  356,  112,  113,  143,  151,  157,
  259,  204,  280,   56,   56,  281,   65,   30,   56,   32,
  1,   66,  205,   36,  299,  8,  161,  2,  338,  112,
  113,  311,  374,  211,   30,   31,   32,  301,  151,  151,
   36,  234,  2,  236,  382,  240,   65,  189,   88,  217,
  189,   66,  225,   45,  225,  111,  225,  225,  225,  252,
  225,  225,  225,  161,  257,  354,  161,  161,  161,  161,
  161,  161,   88,  161,  298,   88,  335,  110,  265,   56,
  108,  183,  183,  183,  161,  161,  146,  183,  105,  161,
  106,  351,  300,   54,  107,  190,  375,  307,  324,  183,
  183,  183,  183,  183,  183,  183,  183,  183,  183,  183,
  183,  183,  183,  183,  183,  183,  183,   54,  183,  161,
   54,  328,  330,  225,  183,  183,  183,  363,  183,  340,
  183,  341,  190,  288,  107,  357,   68,   68,   68,  183,
  187,   84,  365,  187,   84,  107,  349,  371,  183,  161,
  161,  232,  380,  372,   68,   68,  183,  183,  183,  183,
  183,  183,  183,  190,  183,   85,  183,  183,   85,   38,
  183,   39,  183,  183,  183,  183,  151,  151,  151,   68,
   36,   48,  151,   21,   65,   65,   65,   36,  253,   66,
   66,   66,  193,  110,  151,  151,  151,  151,  151,  151,
  151,  151,  151,  151,  151,  151,  151,  151,  151,  151,
  151,  151,  0,  151,  0,  0,  0,  0,   56,  151,
  151,  151,  0,  151,   30,  151,   32,   65,  0,  0,
   36,  0,   66,  0,  151,   56,  147,  0,  0,  0,
  0,  0,   56,  151,  0,   56,  0,  0,  0,  0,
  0,  151,  151,  151,  151,  151,  151,  151,  0,  151,
  0,  151,  151,  0,  0,  151,  0,  151,  151,  151,
  151,  0,  0,  147,  0,  0,  147,  147,  147,  147,
  147,  147,  0,  147,  0,  0,  0,  161,  161,  161,
  0,  0,  0,  161,  147,  147,  0,  0,  0,  147,
  0,  0,  0,  0,  0,  161,  161,  161,  161,  161,
  161,  161,  161,  161,  161,  161,  161,  161,  276,  161,
  161,  161,  161,  0,  161,  0,  0,  0,  0,  147,
  161,  161,  161,  0,  161,   55,  161,  0,   55,   86,
  0,  0,   86,  0,  0,  161,  146,  0,  0,  0,
  0,  0,   55,   55,  161,  0,  0,   86,  0,  147,
  147,  0,  161,  161,  161,  161,  161,  161,  161,  0,
  161,  0,  161,  161,  0,  0,  161,  0,  161,  161,
  161,  161,  0,  146,  0,   40,  146,  146,  146,  146,
  146,  146,  310,  146,  313,  0,  314,  315,  316,  0,
  318,  319,  320,   76,  146,  146,   21,  276,  0,  146,
  276,  276,  276,  276,   67,  276,  276,  276,   55,  0,
  0,  0,   86,   57,  0,  0,   57,  0,  0,   40,
  0,  0,   40,  0,  0,  0,  0,  0,  0,  146,
   57,   57,  148,  0,   40,   57,  0,   30,   31,   32,
  0,  0,  0,   36,  0,   67,  0,  276,   67,  0,
  0,   67,  0,  360,  0,  0,   45,  0,  0,  146,
  146,  0,   67,   67,  0,  0,  0,   67,  0,  148,
  0,  0,  148,  148,  148,  148,  148,  148,  0,  148,
  0,  0,  0,  0,  0,  0,  0,  147,  147,  147,
  148,  148,  0,  147,  0,  148,   57,   67,   40,  0,
  0,  0,  0,  0,  0,  147,  147,  147,  147,  147,
  147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
  147,  147,  147,  0,  147,  148,  0,   67,  0,  0,
  147,  147,  147,  0,  147,  0,  147,  0,  0,  0,
  0,  0,  0,  0,  0,  147,  143,   55,  0,  0,
  0,   86,  0,  0,  147,  148,  148,  0,  0,  0,
  0,  0,  147,  147,  147,  147,  147,  147,  147,  0,
  147,   55,  147,  147,   55,   86,  147,  0,   86,  147,
  147,  147,  0,  143,  0,  0,  143,  143,  143,  143,
  143,  143,  0,  143,  0,  0,  0,  146,  146,  146,
  0,  0,  0,  146,  143,  143,  0,  0,  0,  143,
  0,  0,  0,  0,  0,  146,  146,  146,  146,  146,
  146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
  146,  146,  146,  0,  146,   57,   40,   40,   40,  143,
  146,  146,  146,  0,  146,  0,  146,  0,  0,  0,
  0,   57,   57,  0,  0,  146,  0,  0,  0,   57,
  0,  0,   57,  0,  146,   67,   67,   67,  0,  143,
  143,  0,  146,  146,  146,  146,  146,  146,  146,   40,
  146,  0,  146,  146,   67,  0,  146,  0,  0,  146,
  146,  146,   89,  148,  148,  148,  0,  0,  0,  148,
  0,  0,  0,  0,  0,  0,  0,  0,   67,  0,
   89,  148,  148,  148,  148,  148,  148,  148,  148,  148,
  148,  148,  148,  148,  148,  148,  148,  148,  148,   87,
  148,   90,   87,  0,  0,  0,  148,  148,  148,  0,
  148,  176,  148,  0,  0,  0,  0,   87,  0,   90,
  0,  148,  142,  0,  0,  0,  0,  0,  0,  0,
  148,  0,  0,  0,  201,  0,  0,  0,  148,  148,
  148,  148,  148,  148,  148,   89,  148,  0,  148,  148,
  0,  0,  148,  0,  0,  148,  148,  148,  0,  142,
  0,  0,  142,  142,  142,  142,  142,  142,  0,  142,
  0,  0,  0,  0,  0,  0,  0,  143,  143,  143,
  142,  142,   87,  143,   90,  142,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  143,  143,  143,  143,  143,
  143,  143,  143,  143,  143,  143,  143,  143,  143,  143,
  143,  143,  143,  0,  143,  142,  0,  0,  261,  0,
  143,  143,  143,  0,  143,  0,  143,  0,  0,  0,
  0,  0,  0,  0,  0,  143,  144,  0,  0,  0,
  0,  277,  0,  0,  143,  142,  142,  0,  286,  0,
  0,  0,  143,  143,  143,  143,  143,  143,  143,  0,
  143,  295,  143,  143,  0,  0,  143,  0,  0,  143,
  143,  143,  0,  144,  0,  0,  144,  144,  144,  144,
  144,  144,  0,  144,   89,  0,  0,  312,  0,  0,
  0,  0,  0,  0,  144,  144,  0,  0,  0,  144,
  0,  0,  0,  0,  0,  0,  0,  0,   89,  0,
  0,   89,  0,  0,  0,  339,  0,  0,  0,  0,
  0,   87,  0,   90,  0,  0,  0,  0,  0,  144,
  277,  0,  145,  277,  277,  277,  277,  0,  277,  277,
  277,  0,  0,  0,  0,   87,  0,   90,   87,  0,
   90,  0,  0,  0,  0,  358,  0,  0,  0,  144,
  144,  0,  0,  0,  0,  0,  0,  0,  0,  145,
  0,  0,  145,  145,  145,  145,  145,  145,  0,  145,
  277,  0,  0,  142,  142,  142,  0,  0,  0,  142,
  145,  145,  0,  0,  0,  145,  0,  0,  0,  0,
  0,  142,  142,  142,  142,  142,  142,  142,  142,  142,
  142,  142,  142,  142,  142,  142,  142,  142,  142,  0,
  142,  0,  0,  0,  0,  145,  142,  142,  142,  0,
  142,  0,  142,  0,  0,  0,  0,  0,  0,  0,
  0,  142,  182,  0,  0,  0,  0,  0,  0,  0,
  142,  0,  0,  0,  0,  145,  145,  0,  142,  142,
  142,  142,  142,  142,  142,  0,  142,  0,  142,  142,
  0,  0,  142,  0,  0,  142,  142,  142,  0,  182,
  0,  0,  182,  182,  182,  182,  182,  182,  0,  182,
  0,  0,  0,  0,  0,  0,  0,  144,  144,  144,
  182,  182,  0,  144,  0,  182,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  144,  144,  144,  144,  144,
  144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
  144,  144,  144,  0,  144,  182,  0,  0,  0,  0,
  144,  144,  144,  0,  144,  0,  144,  0,  0,  0,
  0,  0,  0,  0,   65,  144,  0,   40,  0,   41,
  0,  0,  0,  0,  144,  182,  182,  0,  0,  0,
  0,  0,  144,  144,  144,  144,  144,  144,  144,  0,
  144,  0,  144,  144,  0,  0,  144,  0,  0,  144,
  144,  144,  0,  145,  145,  145,  0,  0,  0,  145,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  145,  145,  145,  145,  145,  145,  145,  145,  145,
  145,  145,  145,  145,  145,  145,  145,  145,  145,  0,
  145,  0,  0,  0,  0,  0,  145,  145,  145,  0,
  145,  0,  145,  0,  0,  0,  0,  0,  0,  0,
  0,  145,  182,  0,  0,  0,  0,  0,  0,  0,
  145,  0,  0,  0,  0,  0,  0,  0,  145,  145,
  145,  145,  145,  145,  145,  0,  145,  0,  145,  145,
  0,  0,  145,  0,  0,  145,  145,  145,  0,  182,
  0,  0,  182,  182,  182,  182,  182,  182,  0,  182,
  0,  0,  0,  182,  182,  182,  0,  0,  0,  182,
  182,  182,  0,  0,  0,  182,  0,  0,  0,  0,
  0,  182,  182,  182,  182,  182,  182,  182,  182,  182,
  182,  182,  182,  182,  182,  182,  182,  182,  182,  0,
  182,  0,  0,  0,  0,  182,  182,  182,  182,  0,
  182,  0,  182,  0,  0,  140,  0,  0,  0,  0,
  0,  182,  0,  0,  0,  0,  0,  0,  0,  0,
  182,  0,  0,  0,  0,  182,  182,  0,  182,  182,
  182,  182,  182,  182,  182,  0,  182,  0,  182,  182,
  0,  0,  182,  0,  182,  140,  140,  182,  140,  140,
  140,  0,  0,  0,  0,  0,  0,  0,  0,   21,
   22,  0,   23,  140,  140,  0,  0,  0,  140,   25,
   26,  0,   27,  0,   28,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   29,  0,  0,  0,  0,  0,  140,  0,
   30,   31,   32,   33,   34,   35,   36,  0,  141,  0,
   38,   39,  0,  0,   66,  0,  0,   43,   44,   45,
  0,  0,  0,  0,  0,  0,  0,  0,  140,  140,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  141,  141,
  0,  141,  141,  141,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  182,  182,  182,  141,  141,  0,  182,
  0,  141,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  182,  182,  182,  182,  182,  182,  182,  182,  0,
  182,  182,  182,  182,  182,  182,  182,  182,  182,  0,
  182,  141,  0,  0,  0,  0,  182,  182,  182,  0,
  182,  0,  182,  0,  0,  154,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  182,  141,  141,  0,  0,  0,  0,  0,  182,  182,
  182,  182,  182,  182,  182,  0,  182,  0,  182,  182,
  0,  0,  182,  0,  182,  154,  154,  182,  0,  154,
  0,  0,  0,  0,  0,  0,  140,  140,  140,  0,
  0,  0,  140,  154,  154,  0,  0,  0,  154,  0,
  0,  0,  0,  0,  140,  140,  140,  140,  140,  140,
  140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
  140,  140,  0,  140,  0,  0,  0,  0,  154,  140,
  140,  140,  0,  140,  0,  140,  0,  0,  0,  0,
  0,  0,  0,  0,  140,  0,  0,  0,  0,  0,
  0,  0,  0,  140,  0,  0,  0,  0,  154,  154,
  0,  140,  140,  140,  140,  140,  140,  140,  0,  140,
  0,  140,  140,  0,  0,  140,  0,  0,  140,  140,
  140,  0,  0,  0,  0,  0,  0,  160,  0,  141,
  141,  141,  0,  0,  0,  141,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  141,  141,  141,
  141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
  141,  141,  141,  141,  141,  0,  141,  160,  160,  0,
  0,  160,  141,  141,  141,  0,  141,  0,  141,  0,
  0,  0,  0,  0,  0,  160,  160,  141,  0,  0,
  160,  0,  0,  0,  0,  0,  141,  0,  0,  0,
  0,  0,  0,  0,  141,  141,  141,  141,  141,  141,
  141,  0,  141,  0,  141,  141,  0,  0,  141,  0,
  160,  141,  141,  141,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  159,  0,  154,  154,  154,  0,
  0,  0,  154,  0,  0,  0,  0,  0,  0,  0,
  160,  160,  0,  0,  154,  154,  154,  154,  154,  154,
  154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
  154,  154,  0,  154,  159,  159,  0,  0,  159,  154,
  154,  154,  0,  154,  0,  154,  0,  0,  0,  0,
  0,  0,  159,  159,  154,  0,  0,  159,  0,  0,
  0,  0,  0,  154,  0,  0,  0,  0,  0,  0,
  0,  154,  154,  154,  154,  154,  154,  154,  0,  154,
  0,  154,  154,  0,  0,  154,  0,  159,  154,  154,
  154,  0,  0,  139,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  159,  159,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  139,  139,  0,  0,  139,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  160,  160,
  160,  139,  139,  0,  160,  0,  139,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  160,  160,  160,  160,
  160,  160,  160,  160,  160,  160,  160,  160,  160,  160,
  160,  160,  160,  160,  0,  160,  139,  0,  0,  0,
  0,  160,  160,  160,  0,  160,  0,  160,  0,  0,
  0,  0,  0,  0,   83,  0,  160,  0,  0,  0,
  0,  0,  0,  0,  0,  160,  139,  139,  0,  0,
  0,  0,  0,  160,  160,  160,  160,  160,  160,  160,
  0,  160,  0,  160,  160,  0,  0,  160,  0,  0,
  160,  160,  160,  0,   83,   83,  0,  0,   83,  0,
  0,  0,  0,  0,  0,  159,  159,  159,  0,  0,
  0,  159,   83,   83,  0,  0,  0,   83,  0,  0,
  0,  0,  0,  159,  159,  159,  159,  159,  159,  159,
  159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
  159,  0,  159,  0,  0,  0,  0,   83,  159,  159,
  159,  0,  159,  0,  159,  0,  0,  0,  0,  0,
  0,  0,  0,  159,  0,  0,  0,  0,  0,  0,
  0,  0,  159,  0,  0,  0,  0,   83,   83,  0,
  159,  159,  159,  159,  159,  159,  159,  0,  159,  0,
  159,  159,  0,  0,  159,  0,  0,  159,  159,  159,
  0,  0,   81,  0,  139,  139,  139,  0,  0,  0,
  139,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  139,  139,  139,  139,  139,  139,  139,  139,
  139,  139,  139,  139,  139,  139,  139,  139,  139,  139,
  0,  139,   81,   81,  0,  0,   81,  139,  139,  139,
  0,  139,  0,  139,  0,  0,  0,  0,  0,  0,
   81,   81,  139,  0,  0,   81,  0,  0,  0,  0,
  0,  139,  0,  0,  0,  0,  0,  0,  0,  139,
  139,  139,  139,  139,  139,  139,  0,  139,  0,  139,
  139,  0,  0,  139,  0,   81,  139,  139,  139,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   83,   83,   83,  0,  0,
  0,   83,  0,  0,  0,   81,   81,   41,  0,  0,
  0,  0,  0,   83,   83,   83,   83,   83,   83,   83,
   83,  0,   83,   83,   83,   83,   83,   83,   83,   83,
   83,  0,   83,  0,  0,  0,  0,  0,   83,   83,
   83,  0,   83,  0,   83,  0,  0,   41,  0,  0,
   41,  214,   41,  215,   41,  0,  0,  0,  0,  0,
  214,  214,   83,  0,  0,  0,   41,  0,  0,  0,
   83,   83,   83,   83,   83,   83,   83,  0,   83,  0,
   83,   83,  0,  0,   83,  0,  0,   83,   83,   83,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  214,  0,
   43,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  267,  0,  268,  214,  0,  0,  0,  0,
  0,  0,  0,   81,   81,   81,  0,  0,  0,   81,
   43,  0,  0,   43,  0,   43,  0,   43,  0,  0,
  0,   81,   81,   81,   81,   81,   81,   81,   81,   43,
   81,   81,   81,   81,   81,   81,   81,   81,   81,  0,
   81,  0,  305,  0,  0,  0,   81,   81,   81,  0,
   81,  0,   81,  0,  0,  0,  0,  0,  0,  0,
   34,  0,  0,  0,  0,  0,  0,  0,   76,  0,
   81,  0,  0,  0,  0,  0,  0,  0,   81,   81,
   81,   81,   81,   81,   81,  0,   81,  0,   81,   81,
  0,  0,   81,  0,  0,   81,   81,   81,  0,  0,
   34,  0,  0,   34,  0,   34,  0,   34,  0,   76,
  0,  214,   76,  0,  0,   76,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   76,   76,   41,   41,
   41,   76,  0,  0,  0,  0,  0,  0,  0,  214,
  0,  0,  0,  0,  0,  376,  0,   35,   41,   41,
   41,   41,   41,   41,  381,  0,  0,  0,  0,  384,
  0,   76,   41,   41,  0,   41,  0,  0,  0,  0,
  0,   41,   41,   41,  0,   41,  0,   41,  0,  0,
  0,  0,  0,   34,  0,  0,  0,   35,  0,  0,
   35,   76,   35,  0,   35,   41,  0,  0,  0,  0,
  0,  0,  0,   41,   41,   41,   41,   41,   41,   41,
  0,   41,  0,   41,   41,  0,  0,   41,  0,  0,
   41,   41,   41,  0,  0,  0,  0,  0,  0,  0,
  0,   43,   43,   43,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   43,   43,   43,   43,   43,   43,  0,  0,  0,
  0,  0,  0,  0,  0,   43,   43,  0,   43,  0,
   35,  0,  0,  0,   43,   43,   43,  0,   43,  0,
   43,   65,  0,  0,   40,  0,   41,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   43,  343,
  0,  0,  0,  0,  274,  0,   43,   43,   43,   43,
   43,   43,   43,  0,   43,  0,   43,   43,  0,  0,
   43,   34,   34,   43,   43,   43,  0,  0,  0,   76,
   76,   76,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   34,   34,   34,   34,   34,   34,   76,   76,   76,
   76,   76,   76,   76,   76,   34,   34,   65,   34,  0,
   40,  0,   41,  0,   34,   34,   34,  0,   34,  0,
   34,  0,   76,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   34,  0,
  0,  0,  0,  0,  0,  0,   34,   34,   34,   34,
   34,   34,   34,  0,   34,  0,   34,   34,   35,   35,
   34,  0,   76,   34,   34,   34,  0,  0,  0,  162,
  0,  0,  0,  0,  0,  0,  0,  0,   35,   35,
   35,   35,   35,   35,  0,  0,  0,  0,  0,  0,
  0,  0,   35,   35,  0,   35,  0,  0,  0,  0,
  0,   35,   35,   35,  0,   35,  162,   35,  0,  162,
  162,  162,  162,  162,  162,  0,  162,  0,  0,  0,
  0,  0,  0,  0,  0,   35,  0,  162,  162,  0,
  0,  0,  162,   35,   35,   35,   35,   35,   35,   35,
  0,   35,  0,   35,   35,  0,  0,   35,  0,  0,
   35,   35,   35,  0,  0,  0,  0,  0,  272,  0,
  0,  0,  162,   80,  0,  0,  0,  0,  0,  0,
   89,   90,   15,   16,   17,   18,   19,   20,  0,  0,
  0,  0,  0,  0,  0,  273,   21,   22,  0,   23,
  0,  0,  162,  162,  0,  0,   25,   26,  0,   27,
  0,   28,  0,   80,   80,  0,   80,   80,   80,  0,
   80,  0,  0,  0,  0,  0,  0,  0,  0,   29,
  0,   80,   80,  0,  0,  0,   80,   30,   31,   32,
   33,   34,   35,   36,  272,   37,  0,   38,   39,  0,
  0,   66,  0,  0,   43,   44,   45,  0,   15,   16,
   17,   18,   19,   20,  0,  0,   80,  0,  0,  0,
  0,  273,   21,   22,  0,   23,  0,  0,  0,  0,
  0,  0,   25,   26,  0,   27,  0,   28,  0,  0,
  0,  0,  0,  0,  0,  0,   80,   80,  0,  0,
  0,  0,  0,  0,  0,   29,  0,  0,  0,  0,
  0,  0,  0,   30,   31,   32,   33,   34,   35,   36,
  0,   37,  0,   38,   39,  0,  0,   66,  0,  0,
   43,   44,   45,  0,  0,  0,  0,  0,  0,  0,
  162,  162,  162,  0,  0,  0,  162,  0,  0,  0,
   69,  0,  0,  0,  0,  0,  0,  0,  162,  162,
  162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
  162,  0,  162,  162,  0,  162,  0,  162,  0,  0,
  0,  0,  0,  162,  162,  162,  0,  162,  0,  162,
  0,   69,  0,  0,   69,  0,  0,   69,  162,  0,
  0,  0,  0,  0,  0,  0,  0,  162,   69,   69,
  0,  0,  0,   69,  0,  0,  0,  0,  162,  162,
  162,  0,  0,  162,   59,  162,  162,   59,  0,  162,
  0,  162,  162,  162,   80,   80,   80,  0,  0,  0,
   80,   59,   59,   69,  0,  0,   59,  0,  0,  0,
  0,  0,   80,   80,   80,   80,   80,   80,   80,   80,
  0,   80,   80,   80,   80,   80,   80,   80,  0,   80,
  0,   80,  0,   69,   46,  0,  0,   80,   80,   80,
   60,   80,  0,   80,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   80,  0,  0,  0,  0,  0,   59,  0,  0,
  0,  0,   80,   80,   80,  0,  0,   80,  0,   80,
   80,  0,  0,   80,  0,  0,   80,   80,  0,  0,
  152,  154,  156,  0,  0,  0,  0,  0,  0,  158,
  159,  154,  154,  0,  0,  165,  166,  0,  0,  0,
  0,  0,  0,  0,  0,  168,  0,  0,  170,  171,
  172,  173,  174,  175,  0,  177,  0,  179,  181,  0,
  0,  0,  0,  0,  0,  0,  0,   46,  194,  0,
  0,  154,  0,  0,  0,  0,  0,  0,  0,  202,
  0,  0,  0,  0,  0,  0,  0,  209,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  227,
  228,   69,   69,   69,  0,  233,  0,  235,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   69,
   69,   69,   69,   69,   69,   69,   69,  0,  0,  0,
  0,  0,  0,  0,  0,   70,   59,  0,  0,  0,
  0,  0,  0,  0,   69,  0,  0,  0,   46,  0,
  0,  0,   59,   59,   59,   59,   59,   59,   59,   59,
   59,  0,  262,   59,  0,  0,  0,  0,  264,  0,
  0,  0,  0,  0,  0,  0,   70,   60,  0,   70,
  0,  0,   70,  0,   69,  0,  0,  0,  0,  0,
  0,  0,  0,   70,   70,  0,  287,  0,   70,  291,
  293,   68,  0,  0,  0,  296,  0,  297,  0,  0,
  0,  0,  0,  0,  154,   77,  0,   59,   68,   68,
   68,   84,   85,   68,   68,  0,  0,  0,   70,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   68,  0,
  321,  322,  323,  0,   68,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   68,  0,  0,  0,   70,  0,
  0,  0,  0,  0,  0,  0,   60,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   68,   68,   68,   68,   68,   68,  0,  0,  0,  350,
  0,  352,  0,  0,  0,  355,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   68,  0,  0,  0,  370,  0,  0,  0,  0,  226,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   68,  0,   68,  0,   68,  0,   68,   68,  0,  0,
  0,  0,   68,   68,   68,  249,   68,  0,   68,   68,
   68,   68,   68,   68,  0,   68,  0,   68,  0,   68,
   68,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   68,  0,  0,  0,  0,  0,  0,  0,
   68,  0,  0,  0,  0,  0,  0,   68,  0,  0,
  0,  0,  0,  0,  0,  0,   70,   70,   70,   68,
  0,  0,  0,  0,  0,   68,   68,  0,  0,  0,
  0,   68,  0,   68,   70,   70,   70,   70,   70,   70,
   70,   70,  0,  0,  0,  0,   71,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   70,
   68,  0,   68,  0,  0,  0,  0,  0,  0,  0,
  226,  0,  226,  0,  226,  226,  226,   68,  226,  226,
  226,  0,  0,  0,  0,   68,  0,   71,  0,   68,
   71,   68,  0,   71,   68,   68,  0,  0,  0,   70,
  0,  0,  0,  0,   71,   71,   67,  0,   68,   71,
  0,   68,   68,   68,   68,  0,   68,   68,   68,   68,
   68,   68,  0,   80,   81,   82,  0,  0,   86,   99,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   71,
  0,  226,  0,   99,  361,  0,  362,  0,   68,   82,
   68,  0,  0,   68,  0,  0,  0,  0,   68,  163,
  0,  0,  0,  0,  0,  0,  0,  0,   68,   71,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  183,  184,  185,  186,  187,
  188,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   99,  0,  0,  0,  0,
  0,  0,  0,  0,  224,  0,  0,  0,   72,  0,
  0,  0,  0,  0,  0,   99,  0,   99,  0,   99,
  0,   99,   99,  0,  0,  0,  0,  246,   99,   99,
  0,   99,  0,   99,   99,   99,   99,   99,   99,  0,
   99,  0,   99,  0,   99,  251,  0,  0,  0,   72,
  0,  0,   72,  0,  0,   72,  0,   99,  0,  0,
  0,  0,  0,  0,  0,   99,   72,   72,  0,  0,
  0,   72,   99,  0,  0,   73,  0,  0,  0,  0,
  0,  0,  0,  0,  275,  0,  0,   71,   71,   71,
   99,   99,  0,  0,  0,  0,   99,  0,   99,  0,
  0,   72,  0,  0,  0,   71,   71,   71,   71,   71,
   71,   71,   71,  0,  0,  0,   73,  0,  0,   73,
  0,  0,   73,  0,  0,   99,  0,   99,  0,  0,
   71,   72,  0,   73,   73,  224,  0,  224,   73,  224,
  224,  224,  317,  224,  224,  224,  0,  0,  0,   74,
   99,  0,  0,  0,   99,  0,   99,  0,  0,   99,
   99,  0,  0,  0,  0,  0,  0,  0,   73,  0,
   71,  0,  0,  275,  0,  0,  275,  275,  275,  275,
  0,  275,  275,  275,   99,   99,   99,  0,  0,  0,
   74,  0,  0,   74,  0,  0,   74,  0,   73,  0,
  0,  0,  0,  0,  0,  0,  224,   74,   74,  0,
  0,  0,   74,   99,  190,   99,  0,  190,   99,  190,
  190,  0,  190,  275,  190,  0,  0,  0,  0,  0,
  0,  0,  0,   99,  0,  0,  0,  0,  0,  0,
  190,  0,   74,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  190,   72,
   72,   72,   74,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,   72,   72,   72,
   72,   72,   72,   72,   72,  0,  0,  0,  0,  0,
  0,  190,  0,  183,  0,  0,  183,  0,  183,  183,
  0,  183,   72,  183,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  183,  0,  0,  0,  183,
  0,  0,  0,  0,  0,  0,   73,   73,   73,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   72,  0,   73,   73,   73,   73,   73,   73,
   73,   73,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   73,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  183,  0,  0,  0,  0,  0,  0,  0,  0,  182,
  0,  0,  182,  182,  182,  182,  182,  182,  0,  182,
   74,   74,   74,  0,  0,  0,  0,  0,  0,   73,
  182,  182,  0,  0,  0,  182,  0,  0,   74,   74,
   74,   74,   74,   74,   74,   74,  0,  0,  0,  0,
  0,  0,  0,  0,  190,  0,  0,  0,  0,  0,
  0,  0,  0,   74,  0,  0,  190,  190,  190,  190,
  190,  190,  190,  190,  0,  190,  190,  190,  190,  190,
  190,  190,  190,  190,  0,  190,  0,  0,  0,  0,
  0,  0,  190,  190,  0,  190,  182,  190,  0,  0,
  0,  0,  0,   74,  0,  0,  190,  0,  0,  0,
  0,  0,  0,   33,   33,  190,   33,  0,   33,  0,
   33,  0,  0,  190,  190,  190,  190,  190,  190,  190,
  0,  190,   33,  190,  190,  0,  0,  190,  0,  190,
  190,  190,  190,  183,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  183,  183,  183,  183,  183,
  183,  183,  183,  0,  183,  183,  183,  183,  183,  183,
  0,  183,  183,  0,  183,  0,  0,  0,  0,  0,
  0,  183,  183,  0,  183,  0,  183,  0,  0,  0,
  0,  0,  0,  0,  0,  183,   33,  0,   33,  0,
   32,  0,  0,   32,  183,   32,  0,   32,  0,  0,
  0,  0,  183,  183,  183,  183,  183,  183,  183,   32,
  183,  0,  183,  183,  0,  0,  183,  0,  183,  183,
  183,  183,  0,  0,  0,  182,  0,  0,  0,  182,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  182,  182,  182,  182,  182,  182,  182,  182,  182,
  0,  0,  182,  0,  0,  0,  182,  182,  182,  0,
  182,  0,  0,  0,  0,  0,  0,  182,  182,  0,
  182,  0,  182,   32,  0,   32,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  182,  0,  0,  0,  0,  0,  0,  0,  182,  182,
  182,  182,  182,  182,  182,  0,  182,  0,  182,  182,
  0,  0,  182,  113,  182,  0,  113,  182,  113,   33,
  113,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  113,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   33,   33,   33,   33,   33,   33,
  0,  0,  0,  0,  0,  0,  0,  0,   33,   33,
   33,   33,   33,   33,   33,   33,   33,  0,   33,   33,
   33,   33,  0,   33,   33,   33,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   33,
   33,   33,   33,  0,  0,  0,  113,  0,  113,   33,
   33,   33,   33,   33,   33,   33,   32,   33,   33,   33,
   33,   33,  0,   33,  0,  0,   33,   33,   33,  0,
  0,  0,  0,  125,  0,  0,  125,  0,  125,  0,
  125,   32,   32,   32,   32,   32,   32,  0,  0,  0,
  0,  0,  125,  0,  0,   32,   32,   32,   32,   32,
   32,   32,   32,   32,  0,   32,   32,   32,   32,  0,
   32,   32,   32,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   32,   32,   32,   32,
  0,  0,  0,  0,  0,  0,   32,   32,   32,   32,
   32,   32,   32,  0,   32,   32,   32,   32,   32,  0,
   32,  0,  0,   32,   32,   32,  125,  0,  125,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   13,  0,  0,   40,  0,   41,  113,
   14,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  117,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  113,  113,  113,  113,  113,  113,
  0,  0,  0,  0,  0,  0,  0,  0,  113,  113,
  113,  113,  113,  113,  113,  113,  113,  0,  113,  113,
  113,  113,  0,  113,  113,  113,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  113,
  113,  113,  113,  0,  0,  0,   12,  0,  0,  113,
  113,  113,  113,  113,  113,  113,  0,  113,  113,  113,
  113,  113,  0,  113,  0,  0,  113,  113,  113,  0,
   13,  0,  0,   40,  0,   41,  0,   14,  0,  125,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  117,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  125,  125,  125,  125,  125,  125,
  0,  0,  0,  0,  0,  0,  0,  0,  125,  125,
  125,  125,  125,  125,  125,  125,  125,  0,  125,  125,
  125,  125,  0,  125,  125,  125,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  125,
  125,  125,  125,   12,  0,  213,  0,  0,  0,  125,
  125,  125,  125,  125,  125,  125,  0,  125,  125,  125,
  125,  125,  0,  125,  0,  0,  125,  125,  125,  115,
  0,  0,  0,  0,  0,  0,  116,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   13,  0,  0,   40,
  0,   41,  0,   14,   15,   16,   17,   18,   19,   20,
  0,  0,  0,  0,  0,  117,  0,  0,   21,   22,
  118,   23,  119,  120,  121,  122,  123,  0,   25,   26,
  124,   27,  0,   28,  125,  126,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  127,
  128,   29,  0,  0,  148,  150,  0,  0,  0,  129,
   31,   32,   33,   34,   35,   36,  0,   37,  130,   38,
   39,  131,  0,   42,  0,  0,   43,   44,   45,   12,
  0,  230,  0,  0,  0,  0,  115,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   13,  0,  0,   40,  0,   41,  0,
   14,   15,   16,   17,   18,   19,   20,  0,  0,  0,
  0,  0,  117,  0,  0,   21,   22,  118,   23,  119,
  120,  121,  122,  123,  0,   25,   26,  124,   27,  0,
   28,  125,  126,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  242,  243,  0,  0,  127,  128,   29,  247,
  248,  0,  0,  0,  0,  0,  129,   31,   32,   33,
   34,   35,   36,  0,   37,  130,   38,   39,  131,  0,
   42,  0,  0,   43,   44,   45,   12,  0,  231,  0,
   13,  0,  0,   40,  0,   41,  0,   14,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  117,
  0,  0,  115,  0,  0,  0,  278,  0,  0,  0,
  0,  283,  284,  285,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  290,  0,   15,   16,   17,
   18,   19,   20,  0,  0,  0,  0,  0,  0,  0,
  0,   21,   22,  118,   23,  119,  120,  121,  122,  123,
  0,   25,   26,  124,   27,  150,   28,  125,  126,   13,
  0,  0,   40,   12,   41,  254,   14,  0,  0,  0,
  0,  0,  127,  128,   29,  0,  0,  0,  117,  332,
  334,  0,  129,   31,   32,   33,   34,   35,   36,  0,
   37,  130,   38,   39,  131,  0,   42,  0,  0,   43,
   44,   45,  0,  0,  0,  0,  346,  348,  0,  115,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  150,  0,  0,  0,
  0,  0,  0,  0,   15,   16,   17,   18,   19,   20,
  0,  0,   12,  0,  269,  0,  0,  0,   21,   22,
  118,   23,  119,  120,  121,  122,  123,  0,   25,   26,
  124,   27,  0,   28,  125,  126,   13,  0,  0,   40,
  0,   41,  0,   14,  0,  0,  0,  0,  0,  127,
  128,   29,  0,  0,  0,  117,  0,  0,  0,  129,
   31,   32,   33,   34,   35,   36,  115,   37,  130,   38,
   39,  131,  0,   42,  0,  0,   43,   44,   45,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   15,   16,   17,   18,   19,   20,  0,  0,  0,
  0,  0,  0,  0,  0,   21,   22,  118,   23,  119,
  120,  121,  122,  123,  0,   25,   26,  124,   27,   12,
   28,  125,  126,   13,  0,  0,   40,  0,   41,  0,
   14,  0,  0,  0,  0,  0,  127,  128,   29,  0,
  0,  0,  117,  0,  0,  115,  129,   31,   32,   33,
   34,   35,   36,  0,   37,  130,   38,   39,  131,  0,
   42,  0,  0,   43,   44,   45,  0,  0,  0,  0,
   15,   16,   17,   18,   19,   20,  0,  0,  0,  0,
  0,  0,  0,  0,   21,   22,  118,   23,  119,  120,
  121,  122,  123,  0,   25,   26,  124,   27,  0,   28,
  125,  126,   13,  0,  0,   40,   12,   41,  353,   14,
  0,  0,  0,  0,  0,  127,  128,   29,  0,  0,
  0,  117,  0,  0,  0,  129,   31,   32,   33,   34,
   35,   36,  0,   37,  130,   38,   39,  131,  0,   42,
  0,  0,   43,   44,   45,  0,  0,  0,  0,  0,
  0,  0,  115,  0,  0,  0,  0,  0,  0,  304,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,   15,   16,   17,
   18,   19,   20,  0,  0,   12,  0,  373,  0,  0,
  0,   21,   22,  118,   23,  119,  120,  121,  122,  123,
  0,   25,   26,  124,   27,  0,   28,  125,  126,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  127,  128,   29,  0,  0,  0,  0,  0,
  0,  0,  129,   31,   32,   33,   34,   35,   36,  115,
   37,  130,   38,   39,  131,  0,   42,  0,  0,   43,
   44,   45,  0,  0,  0,  0,  124,  0,  0,  124,
  0,  124,  0,  124,   15,   16,   17,   18,   19,   20,
  0,  0,  0,  0,  0,  124,  0,  0,   21,   22,
  118,   23,  119,  120,  121,  122,  123,  0,   25,   26,
  124,   27,  0,   28,  125,  126,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  127,
  128,   29,  0,  0,  0,  0,  0,  0,  115,  129,
   31,   32,   33,   34,   35,   36,  0,   37,  130,   38,
   39,  131,  0,   42,  0,  0,   43,   44,   45,  124,
  0,  124,  0,   15,   16,   17,   18,   19,   20,  0,
  0,  0,  0,  0,  0,  0,  0,   21,   22,  118,
   23,  119,  120,  121,  122,  123,  0,   25,   26,  124,
   27,  0,   28,  125,  126,   13,  0,  0,   40,  0,
   41,  0,   14,  0,  0,  0,  0,  0,  127,  128,
   29,  0,  0,  0,  117,  0,  0,  0,  129,   31,
   32,   33,   34,   35,   36,  0,   37,  130,   38,   39,
  131,  0,   42,  0,  0,   43,   44,   45,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  117,  0,  0,  117,  0,  117,  0,  117,   12,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  117,
  0,  0,  124,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  124,  124,  124,
  124,  124,  124,  0,  0,  0,  0,  0,  0,  0,
  0,  124,  124,  124,  124,  124,  124,  124,  124,  124,
  0,  124,  124,  124,  124,  0,  124,  124,  124,   27,
  0,  0,   27,  117,   27,  0,   27,  0,  0,  0,
  0,  0,  124,  124,  124,  0,  0,  0,   27,  0,
  0,  0,  124,  124,  124,  124,  124,  124,  124,  0,
  124,  124,  124,  124,  124,  0,  124,  0,  0,  124,
  124,  124,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  115,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  194,  0,  0,  194,  0,  194,
  0,  194,   27,  0,  0,  0,   15,   16,   17,   18,
   19,   20,  0,  194,  0,  0,  0,  0,  0,  0,
   21,   22,  118,   23,  119,  120,  121,  122,  123,  0,
   25,   26,  124,   27,  0,   28,  125,  126,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  127,  128,   29,  0,  0,  117,  0,  0,  0,
  0,  129,   31,   32,   33,   34,   35,   36,  0,   37,
  130,   38,   39,  131,  0,   42,  0,  194,   43,   44,
   45,  117,  117,  117,  117,  117,  117,  0,  0,  0,
  0,  0,  0,  0,  0,  117,  117,  117,  117,  117,
  117,  117,  117,  117,  0,  117,  117,  117,  117,  0,
  117,  117,  117,   23,  0,  0,   23,  0,   23,  0,
   23,  0,  0,  0,  0,  0,  117,  117,  117,  0,
  0,  0,   23,  0,  0,   27,  117,  117,  117,  117,
  117,  117,  117,  0,  117,  117,  117,  117,  117,  0,
  117,  0,  0,  117,  117,  117,  0,  0,  0,  0,
   27,   27,   27,   27,   27,   27,  0,  0,  0,  0,
  0,  0,  0,  0,   27,   27,   27,   27,   27,   27,
   27,   27,   27,  0,   27,   27,   27,   27,  0,   27,
   27,   27,   21,  0,  0,   21,   23,   21,  0,   21,
  0,  0,  0,  0,  0,   27,   27,   27,  0,  0,
  194,   21,  0,  0,  0,   27,   27,   27,   27,   27,
   27,   27,  0,   27,   27,   27,   27,   27,  0,   27,
  0,  0,   27,   27,   27,  194,  194,  194,  194,  194,
  194,  0,  0,  0,  0,  0,  0,  0,  0,  194,
  194,  194,  194,  194,  194,  194,  194,  194,  0,  194,
  194,  194,  194,  0,  194,  194,  194,   19,  0,  0,
   19,  0,   19,  0,   19,   21,  0,  0,  0,  0,
  194,  194,  194,  0,  0,  0,   19,  0,  0,  0,
  194,  194,  194,  194,  194,  194,  194,  0,  194,  194,
  194,  194,  194,  0,  194,  0,  0,  194,  194,  194,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   23,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   19,  0,  0,  0,   23,   23,   23,   23,   23,   23,
  0,  0,  0,  0,  0,  0,  0,  0,   23,   23,
   23,   23,   23,   23,   23,   23,   23,  0,   23,   23,
   23,   23,  0,   23,   23,   23,  0,  0,  0,  0,
  0,  0,  0,   65,  147,  0,   40,  146,   41,   23,
   23,   23,  0,  0,  0,  0,  0,  0,   21,   23,
   23,   23,   23,   23,   23,   23,   98,   23,   23,   23,
   23,   23,  0,   23,  0,  0,   23,   23,   23,  0,
  0,  0,  0,   21,   21,   21,   21,   21,   21,  0,
  0,  0,  0,  0,  0,  0,  0,   21,   21,   21,
   21,   21,   21,   21,   21,   21,  0,   21,   21,   21,
   21,  0,   21,   21,   21,  0,  0,  0,  0,  0,
   65,  0,  0,   40,  0,   41,  0,   87,   21,   21,
   21,  0,  0,   19,  0,  0,  0,  0,   21,   21,
   21,   21,   21,   21,   21,  0,   21,   21,   21,   21,
   21,  0,   21,  0,  0,   21,   21,   21,   19,   19,
   19,   19,   19,   19,  0,  0,  0,  0,  0,  0,
  0,  0,   19,   19,   19,   19,   19,   19,   19,   19,
   19,  0,   19,   19,   19,   19,  0,   19,   19,   19,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   19,   19,   19,  0,  0,  0,  0,
  0,  0,  0,   19,   19,   19,   19,   19,   19,   19,
  0,   19,   19,   19,   19,   19,  0,   19,  0,  0,
   19,   19,   19,   65,  0,  0,   40,  0,   41,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  197,  0,  0,  0,   98,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   88,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   89,   90,   15,   16,   17,   18,   19,   20,
  0,   91,   92,   93,   94,   95,   96,   97,   21,   22,
  0,   23,  0,  0,  0,  0,  0,  0,   25,   26,
  0,   27,  0,   28,  0,   65,  333,   87,   40,  146,
   41,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   29,  0,  0,  0,  0,  0,  0,   98,   30,
   31,   32,   33,   34,   35,   36,  0,   37,  0,   38,
   39,  0,  0,   66,  0,  0,   43,   44,   45,  0,
  0,   15,   16,   17,   18,   19,   20,  0,  0,  0,
  0,  0,  0,  0,  0,   21,   22,  0,   23,  0,
  0,  0,  0,  0,  0,   25,   26,  0,   27,  0,
   28,  0,  0,  0,  0,  0,  0,  0,  0,   87,
  0,  0,  0,  0,  0,  0,   65,  345,   29,   40,
  146,   41,  0,  0,  0,  0,   30,   31,   32,   33,
   34,   35,   36,  0,   37,  0,   38,   39,  0,   98,
   66,  0,  0,   43,   44,   45,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  189,  0,  0,  0,
   88,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   89,   90,   15,   16,   17,   18,   19,   20,
  0,   91,   92,   93,   94,   95,   96,   97,   21,   22,
   87,   23,  0,  0,  0,  0,  0,  0,   25,   26,
  0,   27,  0,   28,   65,  347,  0,   40,  146,   41,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   29,  0,  0,  0,  0,  0,   98,  0,   30,
   31,   32,   33,   34,   35,   36,  0,   37,  0,   38,
   39,  0,   88,   66,  0,  0,   43,   44,   45,  0,
  0,  0,  0,  0,   89,   90,   15,   16,   17,   18,
   19,   20,  0,   91,   92,   93,   94,   95,   96,   97,
   21,   22,  0,   23,  0,  0,  0,  0,  0,  0,
   25,   26,  0,   27,  0,   28,   65,  237,   87,   40,
  0,   41,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   29,  0,  0,  0,  0,  0,   98,
  0,   30,   31,   32,   33,   34,   35,   36,  0,   37,
  0,   38,   39,  0,  0,   66,  0,  0,   43,   44,
   45,  0,  0,   88,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   89,   90,   15,   16,   17,
   18,   19,   20,  0,   91,   92,   93,   94,   95,   96,
   97,   21,   22,  0,   23,  0,  0,  0,  0,  0,
   87,   25,   26,  0,   27,  0,   28,   65,  147,  0,
   40,  0,   41,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   29,  0,  0,  0,  0,  0,
   98,  0,   30,   31,   32,   33,   34,   35,   36,  0,
   37,  0,   38,   39,  0,  0,   66,  0,  0,   43,
   44,   45,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   88,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   89,   90,   15,   16,   17,   18,   19,
   20,  0,   91,   92,   93,   94,   95,   96,   97,   21,
   22,   87,   23,  0,  0,  0,  0,  0,  0,   25,
   26,  0,   27,   65,   28,  0,   40,  146,   41,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   29,  0,  0,  0,   98,  0,  0,  0,
   30,   31,   32,   33,   34,   35,   36,  0,   37,  0,
   38,   39,  0,   88,   66,  0,  0,   43,   44,   45,
  0,  0,  0,  0,  0,   89,   90,   15,   16,   17,
   18,   19,   20,  0,   91,   92,   93,   94,   95,   96,
   97,   21,   22,  0,   23,  0,  0,  0,  0,  0,
  0,   25,   26,  0,   27,   65,   28,   87,   40,  0,
   41,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  250,   29,  0,  0,  0,   98,  0,
  0,  0,   30,   31,   32,   33,   34,   35,   36,  0,
   37,  0,   38,   39,  0,  0,   66,  0,  0,   43,
   44,   45,  0,  0,   88,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   89,   90,   15,   16,
   17,   18,   19,   20,  0,   91,   92,   93,   94,   95,
   96,   97,   21,   22,  0,   23,  0,  0,  0,   87,
  0,  0,   25,   26,  0,   27,  0,   28,   65,  288,
  0,   40,  0,   41,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   29,  0,  0,  0,  0,
  0,   98,  0,   30,   31,   32,   33,   34,   35,   36,
  0,   37,  0,   38,   39,  0,  0,   66,  0,  0,
   43,   44,   45,  0,  0,  0,  0,  0,  0,  0,
   88,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   89,   90,   15,   16,   17,   18,   19,   20,
  0,   91,   92,   93,   94,   95,   96,   97,   21,   22,
  0,   23,   87,  0,  0,  0,  0,  0,   25,   26,
  0,   27,  0,   28,   65,  327,  0,   40,  0,   41,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   29,  0,  0,  0,  0,  0,   98,  0,   30,
   31,   32,   33,   34,   35,   36,  0,   37,  0,   38,
   39,  0,   88,   66,  0,  0,   43,   44,   45,  0,
  0,  0,  0,  0,   89,   90,   15,   16,   17,   18,
   19,   20,  0,   91,   92,   93,   94,   95,   96,   97,
   21,   22,  0,   23,  0,  0,  0,  0,  0,  0,
   25,   26,  0,   27,  0,   28,   65,  329,   87,   40,
  0,   41,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   29,  0,  0,  0,  0,  0,   98,
  0,   30,   31,   32,   33,   34,   35,   36,  0,   37,
  0,   38,   39,  0,  0,   66,  0,  0,   43,   44,
   45,  0,  0,  0,  0,   88,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,   89,   90,   15,
   16,   17,   18,   19,   20,  0,   91,   92,   93,   94,
   95,   96,   97,   21,   22,  0,   23,  0,  0,  0,
   87,  0,  0,   25,   26,  0,   27,  0,   28,   65,
  344,  0,   40,  0,   41,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   29,  0,  0,  0,
  0,  0,   98,  0,   30,   31,   32,   33,   34,   35,
   36,  0,   37,  0,   38,   39,  0,  0,   66,  0,
  0,   43,   44,   45,  0,  0,  0,  0,  0,  0,
  0,   88,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   89,   90,   15,   16,   17,   18,   19,
   20,  0,   91,   92,   93,   94,   95,   96,   97,   21,
   22,  0,   23,   87,  0,  0,  0,  0,  0,   25,
   26,  0,   27,  0,   28,   65,  364,  0,   40,  0,
   41,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   29,  0,  0,  0,  0,  0,   98,  0,
   30,   31,   32,   33,   34,   35,   36,  0,   37,  0,
   38,   39,  0,   88,   66,  0,  0,   43,   44,   45,
  0,  0,  0,  0,  0,   89,   90,   15,   16,   17,
   18,   19,   20,  0,   91,   92,   93,   94,   95,   96,
   97,   21,   22,  0,   23,  0,  0,  0,  0,  0,
  0,   25,   26,  0,   27,  0,   28,   65,  366,   87,
   40,  0,   41,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   29,  0,  0,  0,  0,  0,
   98,  0,   30,   31,   32,   33,   34,   35,   36,  0,
   37,  0,   38,   39,  0,  0,   66,  0,  0,   43,
   44,   45,  0,  0,  0,  0,   88,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   89,   90,
   15,   16,   17,   18,   19,   20,  0,   91,   92,   93,
   94,   95,   96,   97,   21,   22,  0,   23,  0,  0,
  0,   87,  0,  0,   25,   26,  0,   27,  0,   28,
   65,  0,  0,   40,  0,   41,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,   29,  0,  368,
  0,  0,  0,   98,  0,   30,   31,   32,   33,   34,
   35,   36,  0,   37,  0,   38,   39,  0,  0,   66,
  0,  0,   43,   44,   45,  0,  0,  0,  0,  0,
  0,  0,   88,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   89,   90,   15,   16,   17,   18,
   19,   20,  0,   91,   92,   93,   94,   95,   96,   97,
   21,   22,  0,   23,   87,  0,  0,  0,  0,  0,
   25,   26,  0,   27,  0,   28,   65,  377,  0,   40,
  0,   41,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   29,  0,  0,  0,  0,  0,   98,
  0,   30,   31,   32,   33,   34,   35,   36,  0,   37,
  0,   38,   39,  0,   88,   66,  0,  0,   43,   44,
   45,  0,  0,  0,  0,  0,   89,   90,   15,   16,
   17,   18,   19,   20,  0,   91,   92,   93,   94,   95,
   96,   97,   21,   22,  0,   23,  0,  0,  0,  0,
  0,  0,   25,   26,  0,   27,  0,   28,   65,  0,
   87,   40,  0,   41,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   29,  0,  0,  0,  0,
  0,   98,  0,   30,   31,   32,   33,   34,   35,   36,
  0,   37,  0,   38,   39,  0,  0,   66,  0,  0,
   43,   44,   45,  0,  0,  0,  0,   88,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   89,
   90,   15,   16,   17,   18,   19,   20,  0,   91,   92,
   93,   94,   95,   96,   97,   21,   22,  0,   23,  0,
  0,  0,   87,  0,  0,   25,   26,  0,   27,   99,
   28,  0,   99,  0,   99,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   29,  0,
  0,  0,   99,  0,  0,  0,   30,   31,   32,   33,
   34,   35,   36,  0,   37,  0,   38,   39,  0,  0,
   66,  0,  0,   43,   44,   45,  0,  0,  0,  0,
  0,  0,  0,   88,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   89,   90,   15,   16,   17,
   18,   19,   20,  0,   91,   92,   93,   94,   95,   96,
   97,   21,   22,   99,   23,  0,  0,  0,  0,  0,
  0,   25,   26,  0,   27,  0,   28,   64,   64,  0,
  0,   64,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   29,   64,   64,  0,  0,  0,
   64,  0,   30,   31,   32,   33,   34,   35,   36,  0,
   37,  0,   38,   39,  0,   88,   66,  0,  0,   43,
   44,   45,  0,  0,  0,  0,  0,   89,   90,   15,
   16,   17,   18,   19,   20,  0,   91,   92,   93,   94,
   95,   96,   97,   21,   22,  0,   23,  0,  0,  0,
  0,  0,  0,   25,   26,  0,   27,  0,   28,   62,
   62,   64,  0,   62,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   29,   62,   62,  0,
  0,  0,   62,  0,   30,   31,   32,   33,   34,   35,
   36,  0,   37,  0,   38,   39,  0,  0,   66,  0,
  0,   43,   44,   45,  0,  0,   99,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   99,   99,
   99,   99,   99,   99,   99,   99,  0,   99,   99,   99,
   99,   99,   99,   99,   99,   99,  0,   99,  0,  0,
  0,  0,  0,   62,   99,   99,  0,   99,  0,   99,
   65,  0,  0,   40,  0,   41,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,   99,  0,  0,
  0,  0,  0,  0,  0,   99,   99,   99,   99,   99,
   99,   99,  0,   99,  0,   99,   99,  0,  0,   99,
  0,  0,   99,   99,   99,  0,  0,  0,  0,  0,
   64,  0,  0,  0,   64,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   64,   64,   64,   64,
   64,   64,   64,   64,   64,  0,  0,   64,  0,  0,
  0,   64,   64,   64,   87,   64,  0,  0,  0,  0,
  0,  0,   64,   64,  0,   64,   65,   64,  0,   40,
  0,   41,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   64,  0,  0,  0,  0,
  0,  0,  0,   64,   64,   64,   64,   64,   64,   64,
  0,   64,   62,   64,   64,  0,   62,   64,  0,  0,
   64,   64,   64,  0,  0,  0,  0,  0,   62,   62,
   62,   62,   62,   62,   62,   62,   62,  0,  0,   62,
  0,  0,  0,   62,   62,   62,  0,   62,  0,  0,
  0,  0,  0,  0,   62,   62,  0,   62,  0,   62,
   87,  0,  0,   32,   32,  0,   32,  0,   32,  0,
   32,  0,  0,  0,  0,  0,  0,   62,  0,  0,
  0,  0,  0,  0,  0,   62,   62,   62,   62,   62,
   62,   62,  0,   62,  0,   62,   62,  0,  0,   62,
  0,  0,   62,   62,   62,  0,  0,   88,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   89,
  0,   15,   16,   17,   18,   19,   20,  0,   91,   92,
   93,   94,   95,   96,   97,   21,   22,  0,   23,  0,
  0,  0,  0,  0,  0,   25,   26,  0,   27,  0,
   28,  0,  0,   13,  0,  0,   40,  0,   41,  0,
   14,  0,  0,  0,  0,  0,  0,  0,   29,  0,
  0,  0,  0,  0,  0,  0,   30,   31,   32,   33,
   34,   35,   36,  0,   37,  0,   38,   39,  0,  0,
   66,  0,  0,   43,   44,   45,  0,  0,  0,  0,
  0,  0,  0,   88,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,   15,   16,   17,
   18,   19,   20,  0,   91,   92,   93,   94,   95,   96,
   97,   21,   22,  0,   23,  0,   12,  0,  0,  0,
   13,   25,   26,   40,   27,   41,   28,   14,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   29,  0,  0,  0,  0,  0,
  0,  0,   30,   31,   32,   33,   34,   35,   36,   32,
   37,  0,   38,   39,  0,  0,   66,  0,  0,   43,
   44,   45,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   32,   32,   32,   32,   32,   32,
  0,  0,  0,  0,  0,  0,  0,  0,   32,   32,
  0,   32,   65,   32,  0,   40,  0,   41,   32,   32,
  0,   32,  0,   32,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  274,  0,  0,  0,   32,
   32,   32,  0,  0,  0,  0,  0,  0,  0,   32,
   32,   32,   32,   32,   32,   32,  0,   32,  0,   32,
   32,  0,  0,   32,   10,   11,   32,   32,   32,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   15,   16,   17,   18,   19,   20,
  0,  0,  0,  0,  0,  0,  0,   13,   21,   22,
   40,   23,   41,  0,   14,  0,  0,   24,   25,   26,
  0,   27,  0,   28,  0,  0,  197,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   29,  0,  0,  0,  0,  0,  0,  0,   30,
   31,   32,   33,   34,   35,   36,  115,   37,  0,   38,
   39,  0,  0,   42,  0,  0,   43,   44,   45,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   15,   16,   17,   18,   19,   20,  0,   65,  0,
  0,   40,  0,   41,  0,   21,   22,  0,   23,  0,
  120,  0,  0,  0,  0,   25,   26,  0,   27,  0,
   28,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  127,  128,   29,  0,
  0,  0,  0,  0,  0,  0,   30,   31,   32,   33,
   34,   35,   36,  0,   37,  0,   38,   39,  0,  272,
   42,  0,  0,   43,   44,   45,  0,  0,  0,  0,
  0,   89,   90,   15,   16,   17,   18,   19,   20,  0,
  0,  0,  0,  0,  0,  0,  273,   21,   22,  0,
   23,  0,  0,  0,  0,  0,  0,   25,   26,  0,
   27,  0,   28,   13,  153,  0,   40,  0,   41,  0,
   14,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   29,  0,  0,  0,  0,  0,  0,  0,   30,   31,
   32,   33,   34,   35,   36,  0,   37,  0,   38,   39,
  189,  0,   66,  0,  0,   43,   44,   45,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   15,   16,
   17,   18,   19,   20,  0,  0,  0,  0,  0,  0,
  0,  0,   21,   22,  0,   23,  0,  0,  0,  0,
  0,  0,   25,   26,  0,   27,  0,   28,   13,  161,
  0,   40,  0,   41,  0,   14,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   29,  0,  0,  0,  0,
  0,  0,  0,   30,   31,   32,   33,   34,   35,   36,
  0,   37,  0,   38,   39,  272,  0,   42,  0,  0,
   43,   44,   45,  0,  0,  0,  0,   89,  0,   15,
   16,   17,   18,   19,   20,  0,  0,  0,  0,  0,
  0,  0,  273,   21,   22,  0,   23,  0,  0,  0,
  0,  0,  0,   25,   26,  0,   27,  0,   28,  0,
   13,  0,  0,   40,  0,   41,  0,   14,  0,  0,
  0,  0,  0,  0,  0,  0,   29,  0,  0,  0,
  0,  0,  0,  0,   30,   31,   32,   33,   34,   35,
   36,  0,   37,  0,   38,   39,  0,  0,   66,  0,
  0,   43,   44,   45,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   15,   16,   17,   18,   19,   20,
   13,  0,  0,   40,  0,   41,  0,   14,   21,   22,
  0,   23,  0,  0,  0,  0,  0,  0,   25,   26,
  0,   27,  0,   28,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,   29,  0,  0,  0,  0,  0,  0,  0,   30,
   31,   32,   33,   34,   35,   36,  0,   37,  0,   38,
   39,  0,  0,   42,  0,  0,   43,   44,   45,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   15,
   16,   17,   18,   19,   20,   13,  0,  0,   40,  0,
   41,  0,   14,   21,   22,  0,   23,  0,  0,  0,
  0,  0,  0,   25,   26,  0,   27,  0,   28,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   29,  0,  0,  0,
  0,  0,  0,  0,   30,   31,   32,   33,   34,   35,
   36,  0,   37,  178,   38,   39,  0,  0,   42,  0,
  0,   43,   44,   45,  0,  0,  0,  0,  0,  0,
  0,   15,   16,   17,   18,   19,   20,  309,  0,  0,
   40,  0,   41,  0,   14,   21,   22,  0,   23,  0,
  0,  0,  0,  0,  0,   25,   26,  0,   27,  0,
   28,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   29,  0,
  0,  0,  0,  0,  0,  0,   30,   31,   32,   33,
   34,   35,   36,  180,   37,  0,   38,   39,  0,  0,
   42,  0,  0,   43,   44,   45,  0,  0,  0,  0,
  0,   15,   16,   17,   18,   19,   20,  309,  0,  0,
   40,  0,   41,  0,   14,   21,   22,  0,   23,  0,
  0,  0,  0,  0,  0,   25,   26,  0,   27,  0,
   28,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,   29,  0,
  0,  0,  0,  0,  0,  0,   30,   31,   32,   33,
   34,   35,   36,  0,   37,  0,   38,   39,  232,  0,
   42,  0,  0,   43,   44,   45,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,   15,   16,   17,   18,
   19,   20,  309,  0,  0,   40,  0,   41,  0,   14,
   21,   22,  0,   23,  0,  0,  0,  0,  0,  0,
   25,   26,  0,   27,  0,   28,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   29,  0,  0,  0,  0,  0,  0,
  0,   30,   31,   32,   33,   34,   35,   36,  0,   37,
  178,   38,   39,  0,  0,   42,  0,  0,   43,   44,
   45,  0,  0,  0,  0,  0,  0,  0,   15,   16,
   17,   18,   19,   20,   13,  0,  0,   40,  0,   41,
  0,   14,   21,   22,  0,   23,  0,  0,  0,  0,
  0,  0,   25,   26,  0,   27,  0,   28,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   29,  0,  0,  0,  0,
  0,  0,  0,   30,   31,   32,   33,   34,   35,   36,
  180,   37,  0,   38,   39,  0,  0,   42,  0,  0,
   43,   44,   45,  0,  0,  0,  0,  0,   15,   16,
   17,   18,   19,   20,   65,  0,  0,   40,  0,   41,
  0,   14,   21,   22,  0,   23,  0,  0,  0,  0,
  0,  0,   25,   26,  0,   27,  0,   28,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,   29,  0,  0,  0,  0,
  0,  0,  0,   30,   31,   32,   33,   34,   35,   36,
  0,   37,  0,   38,   39,  232,  0,   42,  0,  0,
   43,   44,   45,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,   15,   16,   17,   18,   19,   20,   65,
  0,  0,   40,  0,   41,  0,  0,   21,   22,  0,
   23,  0,  0,  0,  0,  0,  0,   25,   26,  0,
   27,  0,   28,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   29,  0,  0,  0,  0,  0,  0,  0,   30,   31,
   32,   33,   34,   35,   36,  0,   37,  0,   38,   39,
  0,  0,   42,  0,  0,   43,   44,   45,  0,  0,
  0,  0,  0,  0,  0,   15,   16,   17,   18,   19,
   20,  220,  0,  0,   40,  0,   41,  0,   14,   21,
   22,  0,   23,  0,  0,  0,  0,  0,  0,   25,
   26,  0,   27,  0,   28,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   29,  0,  0,  0,  0,  0,  0,  0,
   30,   31,   32,   33,   34,   35,   36,  0,   37,  0,
   38,   39,  0,  0,   42,  0,  0,   43,   44,   45,
  0,  0,  0,  0,  0,   15,   16,   17,   18,   19,
   20,  309,  0,  0,   40,  0,   41,  0,   14,   21,
   22,  0,   23,  0,  0,  0,  0,  0,  0,   25,
   26,  0,   27,  0,   28,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,   29,  0,  0,  0,  0,  0,  0,  0,
   30,   31,   32,   33,   34,   35,   36,  0,   37,  0,
   38,   39,  0,  0,   42,  0,  0,   43,   44,   45,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   15,   16,   17,   18,   19,   20,   32,  0,  0,   32,
  0,   32,  0,   32,   21,   22,  0,   23,  0,  0,
  0,  0,  0,  0,   25,   26,  0,   27,  0,   28,
  0,  0,  0,  0,  0,  0,  0,  0,  182,  0,
  0,  0,  0,  0,  0,  0,  0,   29,  0,  0,
  0,  0,  0,  0,  0,   30,   31,   32,   33,   34,
   35,   36,  0,   37,  0,   38,   39,  0,  0,   66,
  0,  0,   43,   44,   45,  0,  0,  0,  0,  0,
  0,  0,   15,   16,   17,   18,   19,   20,  0,  0,
  0,  0,  0,  0,  0,  0,   21,   22,  0,   23,
  0,  0,  0,  0,  0,  0,   25,   26,  0,   27,
  0,   28,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   29,
  0,  0,  0,  0,  0,  0,  0,   30,   31,   32,
   33,   34,   35,   36,  0,   37,  0,   38,   39,  0,
  0,   42,  0,  0,   43,   44,   45,  0,  0,  0,
  0,  0,   15,   16,   17,   18,   19,   20,  0,  0,
  0,  0,  0,  0,  0,  0,   21,   22,  0,   23,
  0,  0,  0,  0,  0,  0,   25,   26,  0,   27,
  0,   28,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,   29,
  0,  0,  0,  0,  0,  0,  0,   30,   31,   32,
   33,   34,   35,   36,  0,   37,  0,   38,   39,  0,
  0,   42,  0,  0,   43,   44,   45,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,   32,   32,   32,
   32,   32,   32,  0,  0,  0,  0,  0,  0,  0,
  0,   32,   32,  0,   32,  0,  0,  0,  0,  0,
  0,   32,   32,  0,   32,  0,   32,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,   32,  0,  0,  0,  0,  0,
  0,  0,   32,   32,   32,   32,   32,   32,   32,  0,
   32,  0,   32,   32,  0,  0,   32,  0,  0,   32,
   32,   32,
};
static const short yycheck[] = {             37,
  0,   59,   42,   59,   42,   43,   41,   45,  7,   47,
   37,   10,   11,   41,   91,   42,   58,   59,   59,  204,
   47,   74,   75,   59,   59,  117,   59,   88,  220,  124,
   44,   59,  123,   44,   91,   41,   40,   37,   41,  354,
   40,   41,   42,   43,   44,   45,   41,   47,   41,  263,
   49,   41,   41,   59,   44,  0,   59,   44,   58,   59,
  375,  114,  336,   63,   59,  339,   59,  109,   58,   59,
   59,  343,   41,   41,  119,   44,   44,  122,   40,   93,
  125,  126,  143,  108,  129,  130,  295,   41,  133,  124,
   44,   41,  117,   93,   44,  0,   41,   41,  140,   44,
   44,  141,   47,  0,   40,  197,   93,  262,  0,  264,
   40,  110,  123,   58,   59,  292,   41,  309,   63,   44,
  353,  354,  336,  123,  124,   93,   40,  336,  337,  338,
   40,   40,   37,  342,  124,  352,   41,   42,   43,   44,
   45,  263,   47,   93,   41,   40,  355,   44,   93,   41,
   47,  319,   44,   58,   59,   47,  295,  202,   63,  263,
   41,   58,   59,   44,  209,   41,   58,   59,   44,  354,
  344,   41,  197,  295,   44,  319,   41,   41,  123,   44,
   44,  242,  243,   40,  339,  353,  354,   40,   93,   40,
  375,   40,  287,   58,   59,  290,   93,  336,   63,  338,
  256,   93,   40,  342,  257,  263,  0,  263,  300,  353,
  354,  272,  367,   40,  336,  337,  338,  294,  123,  124,
  342,  294,  263,   47,  379,  336,  123,  263,  263,  263,
  263,  123,  272,  355,  274,  263,  276,  277,  278,  263,
  280,  281,  282,   37,   91,  337,   40,   41,   42,   43,
   44,   45,  287,   47,  253,  290,  298,  263,  329,  124,
  263,  261,  262,  263,   58,   59,   44,  267,  263,   63,
  263,  332,   59,  263,  263,  300,  368,  263,  263,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  287,  298,   93,
  290,   41,   41,  343,  304,  305,  306,  349,  308,  348,
  310,  294,  337,   41,  352,   40,  261,  262,  263,  319,
   41,   41,   41,   44,   44,  352,  325,   41,  328,  123,
  124,  263,  377,   41,  279,  280,  336,  337,  338,  339,
  340,  341,  342,  368,  344,   41,  346,  347,   44,  0,
  350,  0,  352,  353,  354,  355,  261,  262,  263,  304,
   59,  123,  267,  295,  261,  262,  263,   41,  191,  261,
  262,  263,  110,   51,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,   -1,   -1,   -1,   -1,  263,  304,
  305,  306,   -1,  308,  336,  310,  338,  304,   -1,   -1,
  342,   -1,  304,   -1,  319,  280,  0,   -1,   -1,   -1,
   -1,   -1,  287,  328,   -1,  290,   -1,   -1,   -1,   -1,
   -1,  336,  337,  338,  339,  340,  341,  342,   -1,  344,
   -1,  346,  347,   -1,   -1,  350,   -1,  352,  353,  354,
  355,   -1,   -1,   37,   -1,   -1,   40,   41,   42,   43,
   44,   45,   -1,   47,   -1,   -1,   -1,  261,  262,  263,
   -1,   -1,   -1,  267,   58,   59,   -1,   -1,   -1,   63,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  221,  293,
  294,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   93,
  304,  305,  306,   -1,  308,   41,  310,   -1,   44,   41,
   -1,   -1,   44,   -1,   -1,  319,  0,   -1,   -1,   -1,
   -1,   -1,   58,   59,  328,   -1,   -1,   59,   -1,  123,
  124,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,   -1,  346,  347,   -1,   -1,  350,   -1,  352,  353,
  354,  355,   -1,   37,   -1,  0,   40,   41,   42,   43,
   44,   45,  272,   47,  274,   -1,  276,  277,  278,   -1,
  280,  281,  282,  292,   58,   59,  295,  310,   -1,   63,
  313,  314,  315,  316,  0,  318,  319,  320,  124,   -1,
   -1,   -1,  124,   41,   -1,   -1,   44,   -1,   -1,   44,
   -1,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   58,   59,  0,   -1,   59,   63,   -1,  336,  337,  338,
   -1,   -1,   -1,  342,   -1,   41,   -1,  360,   44,   -1,
   -1,   47,   -1,  343,   -1,   -1,  355,   -1,   -1,  123,
  124,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   37,
   -1,   -1,   40,   41,   42,   43,   44,   45,   -1,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  261,  262,  263,
   58,   59,   -1,  267,   -1,   63,  124,   93,  123,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   93,   -1,  123,   -1,   -1,
  304,  305,  306,   -1,  308,   -1,  310,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  319,  0,  263,   -1,   -1,
   -1,  263,   -1,   -1,  328,  123,  124,   -1,   -1,   -1,
   -1,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,  287,  346,  347,  290,  287,  350,   -1,  290,  353,
  354,  355,   -1,   37,   -1,   -1,   40,   41,   42,   43,
   44,   45,   -1,   47,   -1,   -1,   -1,  261,  262,  263,
   -1,   -1,   -1,  267,   58,   59,   -1,   -1,   -1,   63,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,  263,  261,  262,  263,   93,
  304,  305,  306,   -1,  308,   -1,  310,   -1,   -1,   -1,
   -1,  279,  280,   -1,   -1,  319,   -1,   -1,   -1,  287,
   -1,   -1,  290,   -1,  328,  261,  262,  263,   -1,  123,
  124,   -1,  336,  337,  338,  339,  340,  341,  342,  304,
  344,   -1,  346,  347,  280,   -1,  350,   -1,   -1,  353,
  354,  355,   41,  261,  262,  263,   -1,   -1,   -1,  267,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  304,   -1,
   59,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   41,
  298,   41,   44,   -1,   -1,   -1,  304,  305,  306,   -1,
  308,   97,  310,   -1,   -1,   -1,   -1,   59,   -1,   59,
   -1,  319,  0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  328,   -1,   -1,   -1,  120,   -1,   -1,   -1,  336,  337,
  338,  339,  340,  341,  342,  124,  344,   -1,  346,  347,
   -1,   -1,  350,   -1,   -1,  353,  354,  355,   -1,   37,
   -1,   -1,   40,   41,   42,   43,   44,   45,   -1,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  261,  262,  263,
   58,   59,  124,  267,  124,   63,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   93,   -1,   -1,  204,   -1,
  304,  305,  306,   -1,  308,   -1,  310,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  319,  0,   -1,   -1,   -1,
   -1,  221,   -1,   -1,  328,  123,  124,   -1,  234,   -1,
   -1,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,  247,  346,  347,   -1,   -1,  350,   -1,   -1,  353,
  354,  355,   -1,   37,   -1,   -1,   40,   41,   42,   43,
   44,   45,   -1,   47,  263,   -1,   -1,  273,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  287,   -1,
   -1,  290,   -1,   -1,   -1,  301,   -1,   -1,   -1,   -1,
   -1,  263,   -1,  263,   -1,   -1,   -1,   -1,   -1,   93,
  310,   -1,  0,  313,  314,  315,  316,   -1,  318,  319,
  320,   -1,   -1,   -1,   -1,  287,   -1,  287,  290,   -1,
  290,   -1,   -1,   -1,   -1,  341,   -1,   -1,   -1,  123,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,
   -1,   -1,   40,   41,   42,   43,   44,   45,   -1,   47,
  360,   -1,   -1,  261,  262,  263,   -1,   -1,   -1,  267,
   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,   -1,   -1,   -1,   -1,   93,  304,  305,  306,   -1,
  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  319,  0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  328,   -1,   -1,   -1,   -1,  123,  124,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,   -1,  346,  347,
   -1,   -1,  350,   -1,   -1,  353,  354,  355,   -1,   37,
   -1,   -1,   40,   41,   42,   43,   44,   45,   -1,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  261,  262,  263,
   58,   59,   -1,  267,   -1,   63,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   93,   -1,   -1,   -1,   -1,
  304,  305,  306,   -1,  308,   -1,  310,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   40,  319,   -1,   43,   -1,   45,
   -1,   -1,   -1,   -1,  328,  123,  124,   -1,   -1,   -1,
   -1,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,  353,
  354,  355,   -1,  261,  262,  263,   -1,   -1,   -1,  267,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,   -1,   -1,   -1,   -1,   -1,  304,  305,  306,   -1,
  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  319,  0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,   -1,  346,  347,
   -1,   -1,  350,   -1,   -1,  353,  354,  355,   -1,   37,
   -1,   -1,   40,   41,   42,   43,   44,   45,   -1,   47,
   -1,   -1,   -1,  261,  262,  263,   -1,   -1,   -1,  267,
   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,   -1,   -1,   -1,   -1,   93,  304,  305,  306,   -1,
  308,   -1,  310,   -1,   -1,  0,   -1,   -1,   -1,   -1,
   -1,  319,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  328,   -1,   -1,   -1,   -1,  123,  124,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,   -1,  346,  347,
   -1,   -1,  350,   -1,  352,   40,   41,  355,   43,   44,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  295,
  296,   -1,  298,   58,   59,   -1,   -1,   -1,   63,  305,
  306,   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   93,   -1,
  336,  337,  338,  339,  340,  341,  342,   -1,  0,   -1,
  346,  347,   -1,   -1,  350,   -1,   -1,  353,  354,  355,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   40,   41,
   -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  261,  262,  263,   58,   59,   -1,  267,
   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,   93,   -1,   -1,   -1,   -1,  304,  305,  306,   -1,
  308,   -1,  310,   -1,   -1,  0,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  328,  123,  124,   -1,   -1,   -1,   -1,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,   -1,  346,  347,
   -1,   -1,  350,   -1,  352,   40,   41,  355,   -1,   44,
   -1,   -1,   -1,   -1,   -1,   -1,  261,  262,  263,   -1,
   -1,   -1,  267,   58,   59,   -1,   -1,   -1,   63,   -1,
   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   93,  304,
  305,  306,   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  319,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,  123,  124,
   -1,  336,  337,  338,  339,  340,  341,  342,   -1,  344,
   -1,  346,  347,   -1,   -1,  350,   -1,   -1,  353,  354,
  355,   -1,   -1,   -1,   -1,   -1,   -1,  0,   -1,  261,
  262,  263,   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,   -1,  298,   40,   41,   -1,
   -1,   44,  304,  305,  306,   -1,  308,   -1,  310,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,  319,   -1,   -1,
   63,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,
  342,   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,
   93,  353,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  0,   -1,  261,  262,  263,   -1,
   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,  124,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,   40,   41,   -1,   -1,   44,  304,
  305,  306,   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,  319,   -1,   -1,   63,   -1,   -1,
   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  336,  337,  338,  339,  340,  341,  342,   -1,  344,
   -1,  346,  347,   -1,   -1,  350,   -1,   93,  353,  354,
  355,   -1,   -1,  0,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   41,   -1,   -1,   44,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  261,  262,
  263,   58,   59,   -1,  267,   -1,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,   93,   -1,   -1,   -1,
   -1,  304,  305,  306,   -1,  308,   -1,  310,   -1,   -1,
   -1,   -1,   -1,   -1,  0,   -1,  319,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  328,  123,  124,   -1,   -1,
   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,
  353,  354,  355,   -1,   40,   41,   -1,   -1,   44,   -1,
   -1,   -1,   -1,   -1,   -1,  261,  262,  263,   -1,   -1,
   -1,  267,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,   -1,  298,   -1,   -1,   -1,   -1,   93,  304,  305,
  306,   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  319,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  328,   -1,   -1,   -1,   -1,  123,  124,   -1,
  336,  337,  338,  339,  340,  341,  342,   -1,  344,   -1,
  346,  347,   -1,   -1,  350,   -1,   -1,  353,  354,  355,
   -1,   -1,  0,   -1,  261,  262,  263,   -1,   -1,   -1,
  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
   -1,  298,   40,   41,   -1,   -1,   44,  304,  305,  306,
   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,  319,   -1,   -1,   63,   -1,   -1,   -1,   -1,
   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,   -1,  346,
  347,   -1,   -1,  350,   -1,   93,  353,  354,  355,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  261,  262,  263,   -1,   -1,
   -1,  267,   -1,   -1,   -1,  123,  124,  0,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,  288,  289,  290,  291,  292,  293,  294,  295,
  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,  304,  305,
  306,   -1,  308,   -1,  310,   -1,   -1,   40,   -1,   -1,
   43,  135,   45,  137,   47,   -1,   -1,   -1,   -1,   -1,
  144,  145,  328,   -1,   -1,   -1,   59,   -1,   -1,   -1,
  336,  337,  338,  339,  340,  341,  342,   -1,  344,   -1,
  346,  347,   -1,   -1,  350,   -1,   -1,  353,  354,  355,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  192,   -1,
  0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  216,   -1,  218,  219,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  261,  262,  263,   -1,   -1,   -1,  267,
   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,   59,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,   -1,  266,   -1,   -1,   -1,  304,  305,  306,   -1,
  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  0,   -1,
  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,   -1,  346,  347,
   -1,   -1,  350,   -1,   -1,  353,  354,  355,   -1,   -1,
   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,   41,
   -1,  335,   44,   -1,   -1,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,  261,  262,
  263,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,
   -1,   -1,   -1,   -1,   -1,  369,   -1,  0,  281,  282,
  283,  284,  285,  286,  378,   -1,   -1,   -1,   -1,  383,
   -1,   93,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,
   -1,  304,  305,  306,   -1,  308,   -1,  310,   -1,   -1,
   -1,   -1,   -1,  123,   -1,   -1,   -1,   40,   -1,   -1,
   43,  123,   45,   -1,   47,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  261,  262,  263,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  295,  296,   -1,  298,   -1,
  123,   -1,   -1,   -1,  304,  305,  306,   -1,  308,   -1,
  310,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   58,
   -1,   -1,   -1,   -1,   63,   -1,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,   -1,  346,  347,   -1,   -1,
  350,  261,  262,  353,  354,  355,   -1,   -1,   -1,  261,
  262,  263,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  281,  282,  283,  284,  285,  286,  279,  280,  281,
  282,  283,  284,  285,  286,  295,  296,   40,  298,   -1,
   43,   -1,   45,   -1,  304,  305,  306,   -1,  308,   -1,
  310,   -1,  304,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,   -1,  346,  347,  261,  262,
  350,   -1,  344,  353,  354,  355,   -1,   -1,   -1,  0,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,
   -1,  304,  305,  306,   -1,  308,   37,  310,   -1,   40,
   41,   42,   43,   44,   45,   -1,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   58,   59,   -1,
   -1,   -1,   63,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,   -1,  267,   -1,
   -1,   -1,   93,  0,   -1,   -1,   -1,   -1,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  294,  295,  296,   -1,  298,
   -1,   -1,  123,  124,   -1,   -1,  305,  306,   -1,  308,
   -1,  310,   -1,   40,   41,   -1,   43,   44,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,
   -1,   58,   59,   -1,   -1,   -1,   63,  336,  337,  338,
  339,  340,  341,  342,  267,  344,   -1,  346,  347,   -1,
   -1,  350,   -1,   -1,  353,  354,  355,   -1,  281,  282,
  283,  284,  285,  286,   -1,   -1,   93,   -1,   -1,   -1,
   -1,  294,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,
   -1,   -1,  305,  306,   -1,  308,   -1,  310,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  261,  262,  263,   -1,   -1,   -1,  267,   -1,   -1,   -1,
  0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,   -1,  293,  294,   -1,  296,   -1,  298,   -1,   -1,
   -1,   -1,   -1,  304,  305,  306,   -1,  308,   -1,  310,
   -1,   41,   -1,   -1,   44,   -1,   -1,   47,  319,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   58,   59,
   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,  339,  340,
  341,   -1,   -1,  344,   41,  346,  347,   44,   -1,  350,
   -1,  352,  353,  354,  261,  262,  263,   -1,   -1,   -1,
  267,   58,   59,   93,   -1,   -1,   63,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,  288,  289,  290,  291,  292,  293,  294,   -1,  296,
   -1,  298,   -1,  123,  7,   -1,   -1,  304,  305,  306,
   13,  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  328,   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,
   -1,   -1,  339,  340,  341,   -1,   -1,  344,   -1,  346,
  347,   -1,   -1,  350,   -1,   -1,  353,  354,   -1,   -1,
   63,   64,   65,   -1,   -1,   -1,   -1,   -1,   -1,   72,
   73,   74,   75,   -1,   -1,   78,   79,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   88,   -1,   -1,   91,   92,
   93,   94,   95,   96,   -1,   98,   -1,  100,  101,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  110,  111,   -1,
   -1,  114,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  122,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  130,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  142,
  143,  261,  262,  263,   -1,  148,   -1,  150,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  0,  263,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  304,   -1,   -1,   -1,  191,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,   -1,  205,  290,   -1,   -1,   -1,   -1,  211,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   41,  220,   -1,   44,
   -1,   -1,   47,   -1,  344,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,  239,   -1,   63,  242,
  243,   23,   -1,   -1,   -1,  248,   -1,  250,   -1,   -1,
   -1,   -1,   -1,   -1,  257,   37,   -1,  344,   40,   41,
   42,   43,   44,   45,   46,   -1,   -1,   -1,   93,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,
  283,  284,  285,   -1,   66,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   76,   -1,   -1,   -1,  123,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  309,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  102,  103,  104,  105,  106,  107,   -1,   -1,   -1,  332,
   -1,  334,   -1,   -1,   -1,  338,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  132,   -1,   -1,   -1,  357,   -1,   -1,   -1,   -1,  141,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  152,   -1,  154,   -1,  156,   -1,  158,  159,   -1,   -1,
   -1,   -1,  164,  165,  166,  167,  168,   -1,  170,  171,
  172,  173,  174,  175,   -1,  177,   -1,  179,   -1,  181,
  182,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  194,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  202,   -1,   -1,   -1,   -1,   -1,   -1,  209,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  261,  262,  263,  221,
   -1,   -1,   -1,   -1,   -1,  227,  228,   -1,   -1,   -1,
   -1,  233,   -1,  235,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   -1,  0,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  304,
  262,   -1,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  272,   -1,  274,   -1,  276,  277,  278,  279,  280,  281,
  282,   -1,   -1,   -1,   -1,  287,   -1,   41,   -1,  291,
   44,  293,   -1,   47,  296,  297,   -1,   -1,   -1,  344,
   -1,   -1,   -1,   -1,   58,   59,   23,   -1,  310,   63,
   -1,  313,  314,  315,  316,   -1,  318,  319,  320,  321,
  322,  323,   -1,   40,   41,   42,   -1,   -1,   45,   46,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,  343,   -1,   60,  346,   -1,  348,   -1,  350,   66,
  352,   -1,   -1,  355,   -1,   -1,   -1,   -1,  360,   76,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  370,  123,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  102,  103,  104,  105,  106,
  107,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  132,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  141,   -1,   -1,   -1,  0,   -1,
   -1,   -1,   -1,   -1,   -1,  152,   -1,  154,   -1,  156,
   -1,  158,  159,   -1,   -1,   -1,   -1,  164,  165,  166,
   -1,  168,   -1,  170,  171,  172,  173,  174,  175,   -1,
  177,   -1,  179,   -1,  181,  182,   -1,   -1,   -1,   41,
   -1,   -1,   44,   -1,   -1,   47,   -1,  194,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  202,   58,   59,   -1,   -1,
   -1,   63,  209,   -1,   -1,  0,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  221,   -1,   -1,  261,  262,  263,
  227,  228,   -1,   -1,   -1,   -1,  233,   -1,  235,   -1,
   -1,   93,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   41,   -1,   -1,   44,
   -1,   -1,   47,   -1,   -1,  262,   -1,  264,   -1,   -1,
  304,  123,   -1,   58,   59,  272,   -1,  274,   63,  276,
  277,  278,  279,  280,  281,  282,   -1,   -1,   -1,  0,
  287,   -1,   -1,   -1,  291,   -1,  293,   -1,   -1,  296,
  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,
  344,   -1,   -1,  310,   -1,   -1,  313,  314,  315,  316,
   -1,  318,  319,  320,  321,  322,  323,   -1,   -1,   -1,
   41,   -1,   -1,   44,   -1,   -1,   47,   -1,  123,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  343,   58,   59,   -1,
   -1,   -1,   63,  350,   37,  352,   -1,   40,  355,   42,
   43,   -1,   45,  360,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  370,   -1,   -1,   -1,   -1,   -1,   -1,
   63,   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,  261,
  262,  263,  123,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,
   -1,  124,   -1,   37,   -1,   -1,   40,   -1,   42,   43,
   -1,   45,  304,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   63,
   -1,   -1,   -1,   -1,   -1,   -1,  261,  262,  263,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  344,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  304,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,
   -1,   -1,   40,   41,   42,   43,   44,   45,   -1,   47,
  261,  262,  263,   -1,   -1,   -1,   -1,   -1,   -1,  344,
   58,   59,   -1,   -1,   -1,   63,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  304,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,
   -1,   -1,  305,  306,   -1,  308,  124,  310,   -1,   -1,
   -1,   -1,   -1,  344,   -1,   -1,  319,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   41,  328,   43,   -1,   45,   -1,
   47,   -1,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,   59,  346,  347,   -1,   -1,  350,   -1,  352,
  353,  354,  355,  267,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,  288,  289,  290,  291,  292,  293,
   -1,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,
   -1,  305,  306,   -1,  308,   -1,  310,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  319,  123,   -1,  125,   -1,
   40,   -1,   -1,   43,  328,   45,   -1,   47,   -1,   -1,
   -1,   -1,  336,  337,  338,  339,  340,  341,  342,   59,
  344,   -1,  346,  347,   -1,   -1,  350,   -1,  352,  353,
  354,  355,   -1,   -1,   -1,  263,   -1,   -1,   -1,  267,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,  287,
   -1,   -1,  290,   -1,   -1,   -1,  294,  295,  296,   -1,
  298,   -1,   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,
  308,   -1,  310,  123,   -1,  125,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,   -1,  346,  347,
   -1,   -1,  350,   40,  352,   -1,   43,  355,   45,  256,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,
  297,  298,  299,  300,  301,  302,  303,   -1,  305,  306,
  307,  308,   -1,  310,  311,  312,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  326,
  327,  328,  329,   -1,   -1,   -1,  123,   -1,  125,  336,
  337,  338,  339,  340,  341,  342,  256,  344,  345,  346,
  347,  348,   -1,  350,   -1,   -1,  353,  354,  355,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,
   47,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,  295,  296,  297,  298,  299,
  300,  301,  302,  303,   -1,  305,  306,  307,  308,   -1,
  310,  311,  312,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  326,  327,  328,  329,
   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,  345,  346,  347,  348,   -1,
  350,   -1,   -1,  353,  354,  355,  123,   -1,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,  256,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,
  297,  298,  299,  300,  301,  302,  303,   -1,  305,  306,
  307,  308,   -1,  310,  311,  312,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  326,
  327,  328,  329,   -1,   -1,   -1,  123,   -1,   -1,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,  345,  346,
  347,  348,   -1,  350,   -1,   -1,  353,  354,  355,   -1,
   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,  256,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,
  297,  298,  299,  300,  301,  302,  303,   -1,  305,  306,
  307,  308,   -1,  310,  311,  312,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  326,
  327,  328,  329,  123,   -1,  125,   -1,   -1,   -1,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,  345,  346,
  347,  348,   -1,  350,   -1,   -1,  353,  354,  355,  256,
   -1,   -1,   -1,   -1,   -1,   -1,  263,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   43,
   -1,   45,   -1,   47,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,  295,  296,
  297,  298,  299,  300,  301,  302,  303,   -1,  305,  306,
  307,  308,   -1,  310,  311,  312,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  326,
  327,  328,   -1,   -1,   60,   61,   -1,   -1,   -1,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,  345,  346,
  347,  348,   -1,  350,   -1,   -1,  353,  354,  355,  123,
   -1,  125,   -1,   -1,   -1,   -1,  256,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,
   47,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,  295,  296,  297,  298,  299,
  300,  301,  302,  303,   -1,  305,  306,  307,  308,   -1,
  310,  311,  312,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  158,  159,   -1,   -1,  326,  327,  328,  165,
  166,   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,  345,  346,  347,  348,   -1,
  350,   -1,   -1,  353,  354,  355,  123,   -1,  125,   -1,
   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,  256,   -1,   -1,   -1,  222,   -1,   -1,   -1,
   -1,  227,  228,  229,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  241,   -1,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  295,  296,  297,  298,  299,  300,  301,  302,  303,
   -1,  305,  306,  307,  308,  271,  310,  311,  312,   40,
   -1,   -1,   43,  123,   45,  125,   47,   -1,   -1,   -1,
   -1,   -1,  326,  327,  328,   -1,   -1,   -1,   59,  295,
  296,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,  345,  346,  347,  348,   -1,  350,   -1,   -1,  353,
  354,  355,   -1,   -1,   -1,   -1,  322,  323,   -1,  256,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,
   -1,   -1,  123,   -1,  125,   -1,   -1,   -1,  295,  296,
  297,  298,  299,  300,  301,  302,  303,   -1,  305,  306,
  307,  308,   -1,  310,  311,  312,   40,   -1,   -1,   43,
   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,  326,
  327,  328,   -1,   -1,   -1,   59,   -1,   -1,   -1,  336,
  337,  338,  339,  340,  341,  342,  256,  344,  345,  346,
  347,  348,   -1,  350,   -1,   -1,  353,  354,  355,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  295,  296,  297,  298,  299,
  300,  301,  302,  303,   -1,  305,  306,  307,  308,  123,
  310,  311,  312,   40,   -1,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,  326,  327,  328,   -1,
   -1,   -1,   59,   -1,   -1,  256,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,  345,  346,  347,  348,   -1,
  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,
  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  295,  296,  297,  298,  299,  300,
  301,  302,  303,   -1,  305,  306,  307,  308,   -1,  310,
  311,  312,   40,   -1,   -1,   43,  123,   45,  125,   47,
   -1,   -1,   -1,   -1,   -1,  326,  327,  328,   -1,   -1,
   -1,   59,   -1,   -1,   -1,  336,  337,  338,  339,  340,
  341,  342,   -1,  344,  345,  346,  347,  348,   -1,  350,
   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  256,   -1,   -1,   -1,   -1,   -1,   -1,  263,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,  283,
  284,  285,  286,   -1,   -1,  123,   -1,  125,   -1,   -1,
   -1,  295,  296,  297,  298,  299,  300,  301,  302,  303,
   -1,  305,  306,  307,  308,   -1,  310,  311,  312,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  326,  327,  328,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  336,  337,  338,  339,  340,  341,  342,  256,
  344,  345,  346,  347,  348,   -1,  350,   -1,   -1,  353,
  354,  355,   -1,   -1,   -1,   -1,   40,   -1,   -1,   43,
   -1,   45,   -1,   47,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,  295,  296,
  297,  298,  299,  300,  301,  302,  303,   -1,  305,  306,
  307,  308,   -1,  310,  311,  312,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  326,
  327,  328,   -1,   -1,   -1,   -1,   -1,   -1,  256,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,  345,  346,
  347,  348,   -1,  350,   -1,   -1,  353,  354,  355,  123,
   -1,  125,   -1,  281,  282,  283,  284,  285,  286,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,  297,
  298,  299,  300,  301,  302,  303,   -1,  305,  306,  307,
  308,   -1,  310,  311,  312,   40,   -1,   -1,   43,   -1,
   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,  326,  327,
  328,   -1,   -1,   -1,   59,   -1,   -1,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,  345,  346,  347,
  348,   -1,  350,   -1,   -1,  353,  354,  355,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   40,   -1,   -1,   43,   -1,   45,   -1,   47,  123,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,  256,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  295,  296,  297,  298,  299,  300,  301,  302,  303,
   -1,  305,  306,  307,  308,   -1,  310,  311,  312,   40,
   -1,   -1,   43,  123,   45,   -1,   47,   -1,   -1,   -1,
   -1,   -1,  326,  327,  328,   -1,   -1,   -1,   59,   -1,
   -1,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,  345,  346,  347,  348,   -1,  350,   -1,   -1,  353,
  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  256,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,
   -1,   47,  123,   -1,   -1,   -1,  281,  282,  283,  284,
  285,  286,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,
  295,  296,  297,  298,  299,  300,  301,  302,  303,   -1,
  305,  306,  307,  308,   -1,  310,  311,  312,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  326,  327,  328,   -1,   -1,  256,   -1,   -1,   -1,
   -1,  336,  337,  338,  339,  340,  341,  342,   -1,  344,
  345,  346,  347,  348,   -1,  350,   -1,  123,  353,  354,
  355,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  295,  296,  297,  298,  299,
  300,  301,  302,  303,   -1,  305,  306,  307,  308,   -1,
  310,  311,  312,   40,   -1,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,  326,  327,  328,   -1,
   -1,   -1,   59,   -1,   -1,  256,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,  345,  346,  347,  348,   -1,
  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,
  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  295,  296,  297,  298,  299,  300,
  301,  302,  303,   -1,  305,  306,  307,  308,   -1,  310,
  311,  312,   40,   -1,   -1,   43,  123,   45,   -1,   47,
   -1,   -1,   -1,   -1,   -1,  326,  327,  328,   -1,   -1,
  256,   59,   -1,   -1,   -1,  336,  337,  338,  339,  340,
  341,  342,   -1,  344,  345,  346,  347,  348,   -1,  350,
   -1,   -1,  353,  354,  355,  281,  282,  283,  284,  285,
  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  295,
  296,  297,  298,  299,  300,  301,  302,  303,   -1,  305,
  306,  307,  308,   -1,  310,  311,  312,   40,   -1,   -1,
   43,   -1,   45,   -1,   47,  123,   -1,   -1,   -1,   -1,
  326,  327,  328,   -1,   -1,   -1,   59,   -1,   -1,   -1,
  336,  337,  338,  339,  340,  341,  342,   -1,  344,  345,
  346,  347,  348,   -1,  350,   -1,   -1,  353,  354,  355,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  256,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,
  297,  298,  299,  300,  301,  302,  303,   -1,  305,  306,
  307,  308,   -1,  310,  311,  312,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   41,   -1,   43,   44,   45,  326,
  327,  328,   -1,   -1,   -1,   -1,   -1,   -1,  256,  336,
  337,  338,  339,  340,  341,  342,   63,  344,  345,  346,
  347,  348,   -1,  350,   -1,   -1,  353,  354,  355,   -1,
   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,  297,
  298,  299,  300,  301,  302,  303,   -1,  305,  306,  307,
  308,   -1,  310,  311,  312,   -1,   -1,   -1,   -1,   -1,
   40,   -1,   -1,   43,   -1,   45,   -1,  124,  326,  327,
  328,   -1,   -1,  256,   -1,   -1,   -1,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,  345,  346,  347,
  348,   -1,  350,   -1,   -1,  353,  354,  355,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  295,  296,  297,  298,  299,  300,  301,  302,
  303,   -1,  305,  306,  307,  308,   -1,  310,  311,  312,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  326,  327,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,  345,  346,  347,  348,   -1,  350,   -1,   -1,
  353,  354,  355,   40,   -1,   -1,   43,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,  296,
   -1,  298,   -1,   -1,   -1,   -1,   -1,   -1,  305,  306,
   -1,  308,   -1,  310,   -1,   40,   41,  124,   43,   44,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,   63,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,   -1,  346,
  347,   -1,   -1,  350,   -1,   -1,  353,  354,  355,   -1,
   -1,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  295,  296,   -1,  298,   -1,
   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,  308,   -1,
  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   41,  328,   43,
   44,   45,   -1,   -1,   -1,   -1,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,   -1,  346,  347,   -1,   63,
  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  263,   -1,   -1,   -1,
  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  124,  298,   -1,   -1,   -1,   -1,   -1,   -1,  305,  306,
   -1,  308,   -1,  310,   40,   41,   -1,   43,   44,   45,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  328,   -1,   -1,   -1,   -1,   -1,   63,   -1,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,   -1,  346,
  347,   -1,  267,  350,   -1,   -1,  353,  354,  355,   -1,
   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,   -1,
  305,  306,   -1,  308,   -1,  310,   40,   41,  124,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   63,
   -1,  336,  337,  338,  339,  340,  341,  342,   -1,  344,
   -1,  346,  347,   -1,   -1,  350,   -1,   -1,  353,  354,
  355,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,
  124,  305,  306,   -1,  308,   -1,  310,   40,   41,   -1,
   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,
   63,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,  353,
  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  124,  298,   -1,   -1,   -1,   -1,   -1,   -1,  305,
  306,   -1,  308,   40,  310,   -1,   43,   44,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  328,   -1,   -1,   -1,   63,   -1,   -1,   -1,
  336,  337,  338,  339,  340,  341,  342,   -1,  344,   -1,
  346,  347,   -1,  267,  350,   -1,   -1,  353,  354,  355,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,
   -1,  305,  306,   -1,  308,   40,  310,  124,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,  328,   -1,   -1,   -1,   63,   -1,
   -1,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,  353,
  354,  355,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,   -1,   -1,   -1,  124,
   -1,   -1,  305,  306,   -1,  308,   -1,  310,   40,   41,
   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   63,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,  296,
   -1,  298,  124,   -1,   -1,   -1,   -1,   -1,  305,  306,
   -1,  308,   -1,  310,   40,   41,   -1,   43,   -1,   45,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  328,   -1,   -1,   -1,   -1,   -1,   63,   -1,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,   -1,  346,
  347,   -1,  267,  350,   -1,   -1,  353,  354,  355,   -1,
   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,   -1,
  305,  306,   -1,  308,   -1,  310,   40,   41,  124,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   63,
   -1,  336,  337,  338,  339,  340,  341,  342,   -1,  344,
   -1,  346,  347,   -1,   -1,  350,   -1,   -1,  353,  354,
  355,   -1,   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,  288,  289,  290,  291,
  292,  293,  294,  295,  296,   -1,  298,   -1,   -1,   -1,
  124,   -1,   -1,  305,  306,   -1,  308,   -1,  310,   40,
   41,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,
   -1,   -1,   63,   -1,  336,  337,  338,  339,  340,  341,
  342,   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,
   -1,  353,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,  288,  289,  290,  291,  292,  293,  294,  295,
  296,   -1,  298,  124,   -1,   -1,   -1,   -1,   -1,  305,
  306,   -1,  308,   -1,  310,   40,   41,   -1,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   63,   -1,
  336,  337,  338,  339,  340,  341,  342,   -1,  344,   -1,
  346,  347,   -1,  267,  350,   -1,   -1,  353,  354,  355,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,
   -1,  305,  306,   -1,  308,   -1,  310,   40,   41,  124,
   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,
   63,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,  353,
  354,  355,   -1,   -1,   -1,   -1,  267,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,   -1,  288,  289,  290,
  291,  292,  293,  294,  295,  296,   -1,  298,   -1,   -1,
   -1,  124,   -1,   -1,  305,  306,   -1,  308,   -1,  310,
   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   59,
   -1,   -1,   -1,   63,   -1,  336,  337,  338,  339,  340,
  341,  342,   -1,  344,   -1,  346,  347,   -1,   -1,  350,
   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,  124,   -1,   -1,   -1,   -1,   -1,
  305,  306,   -1,  308,   -1,  310,   40,   41,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   63,
   -1,  336,  337,  338,  339,  340,  341,  342,   -1,  344,
   -1,  346,  347,   -1,  267,  350,   -1,   -1,  353,  354,
  355,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,
   -1,   -1,  305,  306,   -1,  308,   -1,  310,   40,   -1,
  124,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   63,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,  267,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,  296,   -1,  298,   -1,
   -1,   -1,  124,   -1,   -1,  305,  306,   -1,  308,   40,
  310,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,
   -1,   -1,   63,   -1,   -1,   -1,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,   -1,  346,  347,   -1,   -1,
  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  124,  298,   -1,   -1,   -1,   -1,   -1,
   -1,  305,  306,   -1,  308,   -1,  310,   40,   41,   -1,
   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  328,   58,   59,   -1,   -1,   -1,
   63,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,   -1,  346,  347,   -1,  267,  350,   -1,   -1,  353,
  354,  355,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,  288,  289,  290,  291,
  292,  293,  294,  295,  296,   -1,  298,   -1,   -1,   -1,
   -1,   -1,   -1,  305,  306,   -1,  308,   -1,  310,   40,
   41,  124,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  328,   58,   59,   -1,
   -1,   -1,   63,   -1,  336,  337,  338,  339,  340,  341,
  342,   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,
   -1,  353,  354,  355,   -1,   -1,  267,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,   -1,  288,  289,  290,
  291,  292,  293,  294,  295,  296,   -1,  298,   -1,   -1,
   -1,   -1,   -1,  124,  305,  306,   -1,  308,   -1,  310,
   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,  340,
  341,  342,   -1,  344,   -1,  346,  347,   -1,   -1,  350,
   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,   -1,
  263,   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,   -1,   -1,  290,   -1,   -1,
   -1,  294,  295,  296,  124,  298,   -1,   -1,   -1,   -1,
   -1,   -1,  305,  306,   -1,  308,   40,  310,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,  263,  346,  347,   -1,  267,  350,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,   -1,   -1,  290,
   -1,   -1,   -1,  294,  295,  296,   -1,  298,   -1,   -1,
   -1,   -1,   -1,   -1,  305,  306,   -1,  308,   -1,  310,
  124,   -1,   -1,   40,   41,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,  340,
  341,  342,   -1,  344,   -1,  346,  347,   -1,   -1,  350,
   -1,   -1,  353,  354,  355,   -1,   -1,  267,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
   -1,  281,  282,  283,  284,  285,  286,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,  296,   -1,  298,   -1,
   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,  308,   -1,
  310,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,   -1,  346,  347,   -1,   -1,
  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,  283,
  284,  285,  286,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   -1,  123,   -1,   -1,   -1,
   40,  305,  306,   43,  308,   45,  310,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  336,  337,  338,  339,  340,  341,  342,  256,
  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,  353,
  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,
   -1,  298,   40,  300,   -1,   43,   -1,   45,  305,  306,
   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   63,   -1,   -1,   -1,  326,
  327,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,   -1,  346,
  347,   -1,   -1,  350,  261,  262,  353,  354,  355,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   40,  295,  296,
   43,  298,   45,   -1,   47,   -1,   -1,  304,  305,  306,
   -1,  308,   -1,  310,   -1,   -1,   59,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,
  337,  338,  339,  340,  341,  342,  256,  344,   -1,  346,
  347,   -1,   -1,  350,   -1,   -1,  353,  354,  355,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  281,  282,  283,  284,  285,  286,   -1,   40,   -1,
   -1,   43,   -1,   45,   -1,  295,  296,   -1,  298,   -1,
  300,   -1,   -1,   -1,   -1,  305,  306,   -1,  308,   -1,
  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  326,  327,  328,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,   -1,  346,  347,   -1,  267,
  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  294,  295,  296,   -1,
  298,   -1,   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,
  308,   -1,  310,   40,   41,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,   -1,  346,  347,
  263,   -1,  350,   -1,   -1,  353,  354,  355,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,
   -1,   -1,  305,  306,   -1,  308,   -1,  310,   40,   41,
   -1,   43,   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,   -1,  346,  347,  267,   -1,  350,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,  279,   -1,  281,
  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  294,  295,  296,   -1,  298,   -1,   -1,   -1,
   -1,   -1,   -1,  305,  306,   -1,  308,   -1,  310,   -1,
   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,
  342,   -1,  344,   -1,  346,  347,   -1,   -1,  350,   -1,
   -1,  353,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,
   40,   -1,   -1,   43,   -1,   45,   -1,   47,  295,  296,
   -1,  298,   -1,   -1,   -1,   -1,   -1,   -1,  305,  306,
   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,
  337,  338,  339,  340,  341,  342,   -1,  344,   -1,  346,
  347,   -1,   -1,  350,   -1,   -1,  353,  354,  355,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,
  282,  283,  284,  285,  286,   40,   -1,   -1,   43,   -1,
   45,   -1,   47,  295,  296,   -1,  298,   -1,   -1,   -1,
   -1,   -1,   -1,  305,  306,   -1,  308,   -1,  310,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,
  342,   -1,  344,  263,  346,  347,   -1,   -1,  350,   -1,
   -1,  353,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  281,  282,  283,  284,  285,  286,   40,   -1,   -1,
   43,   -1,   45,   -1,   47,  295,  296,   -1,  298,   -1,
   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,  308,   -1,
  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,
  340,  341,  342,  263,  344,   -1,  346,  347,   -1,   -1,
  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,
   -1,  281,  282,  283,  284,  285,  286,   40,   -1,   -1,
   43,   -1,   45,   -1,   47,  295,  296,   -1,  298,   -1,
   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,  308,   -1,
  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,
  340,  341,  342,   -1,  344,   -1,  346,  347,  263,   -1,
  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,  283,  284,
  285,  286,   40,   -1,   -1,   43,   -1,   45,   -1,   47,
  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,   -1,
  305,  306,   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  336,  337,  338,  339,  340,  341,  342,   -1,  344,
  263,  346,  347,   -1,   -1,  350,   -1,   -1,  353,  354,
  355,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,
  283,  284,  285,  286,   40,   -1,   -1,   43,   -1,   45,
   -1,   47,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,
   -1,   -1,  305,  306,   -1,  308,   -1,  310,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,  342,
  263,  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,   -1,  281,  282,
  283,  284,  285,  286,   40,   -1,   -1,   43,   -1,   45,
   -1,   47,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,
   -1,   -1,  305,  306,   -1,  308,   -1,  310,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  336,  337,  338,  339,  340,  341,  342,
   -1,  344,   -1,  346,  347,  263,   -1,  350,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  281,  282,  283,  284,  285,  286,   40,
   -1,   -1,   43,   -1,   45,   -1,   -1,  295,  296,   -1,
  298,   -1,   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,
  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,
  338,  339,  340,  341,  342,   -1,  344,   -1,  346,  347,
   -1,   -1,  350,   -1,   -1,  353,  354,  355,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  281,  282,  283,  284,  285,
  286,   40,   -1,   -1,   43,   -1,   45,   -1,   47,  295,
  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,   -1,  305,
  306,   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  336,  337,  338,  339,  340,  341,  342,   -1,  344,   -1,
  346,  347,   -1,   -1,  350,   -1,   -1,  353,  354,  355,
   -1,   -1,   -1,   -1,   -1,  281,  282,  283,  284,  285,
  286,   40,   -1,   -1,   43,   -1,   45,   -1,   47,  295,
  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,   -1,  305,
  306,   -1,  308,   -1,  310,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  336,  337,  338,  339,  340,  341,  342,   -1,  344,   -1,
  346,  347,   -1,   -1,  350,   -1,   -1,  353,  354,  355,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  281,  282,  283,  284,  285,  286,   40,   -1,   -1,   43,
   -1,   45,   -1,   47,  295,  296,   -1,  298,   -1,   -1,
   -1,   -1,   -1,   -1,  305,  306,   -1,  308,   -1,  310,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  319,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  336,  337,  338,  339,  340,
  341,  342,   -1,  344,   -1,  346,  347,   -1,   -1,  350,
   -1,   -1,  353,  354,  355,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  281,  282,  283,  284,  285,  286,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,   -1,  298,
   -1,   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,  308,
   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,  338,
  339,  340,  341,  342,   -1,  344,   -1,  346,  347,   -1,
   -1,  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,
   -1,   -1,  281,  282,  283,  284,  285,  286,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,   -1,  298,
   -1,   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,  308,
   -1,  310,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,  337,  338,
  339,  340,  341,  342,   -1,  344,   -1,  346,  347,   -1,
   -1,  350,   -1,   -1,  353,  354,  355,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,   -1,
   -1,  305,  306,   -1,  308,   -1,  310,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  336,  337,  338,  339,  340,  341,  342,   -1,
  344,   -1,  346,  347,   -1,   -1,  350,   -1,   -1,  353,
  354,  355,
};
#define YYFINAL 4
#ifndef YYDEBUG
#define YYDEBUG 0
#endif
#define YYMAXTOKEN 356
#if YYDEBUG
static const char *yyname[] = {

"end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,"'%'",0,0,"'('","')'","'*'","'+'","','","'-'",0,"'/'",0,0,0,0,0,0,0,0,0,0,
"':'","';'",0,0,0,"'?'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
"'['",0,"']'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"'{'",
"'|'","'}'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"FIRSTTOKEN","PROGRAM","PASTAT","PASTAT2",
"XBEGIN","XEND","NL","ARRAY","MATCH","NOTMATCH","MATCHOP","FINAL","DOT","ALL",
"CCL","NCCL","CHAR","OR","STAR","QUEST","PLUS","EMPTYRE","AND","BOR","BITOR",
"BITAND","BITCOMPL","BITLSHIFT","BITRSHIFT","BITXOR","APPEND","EQ","GE","GT",
"LE","LT","NE","IN","ARG","BLTIN","BREAK","CLOSE","CONTINUE","DELETE","DO",
"EXIT","FOR","FUNC","SUB","GSUB","IF","INDEX","LSUBSTR","MATCHFCN","NEXT",
"NEXTFILE","ADD","MINUS","MULT","DIVIDE","MOD","ASSIGN","ASGNOP","ADDEQ",
"SUBEQ","MULTEQ","DIVEQ","MODEQ","POWEQ","PRINT","PRINTF","SPRINTF","ELSE",
"INTEST","CONDEXPR","POSTINCR","PREINCR","POSTDECR","PREDECR","VAR","IVAR",
"VARNF","CALL","NUMBER","STRING","VARERR","REGEXPR","GETLINE","RETURN","SPLIT",
"SUBSTR","WHILE","CAT","NOT","UMINUS","POWER","DECR","INCR","INDIRECT",
"LASTTOKEN",
};
static const char *yyrule[] = {
"$accept : program",
"program : pas",
"program : error",
"and : AND",
"and : and NL",
"bor : BOR",
"bor : bor NL",
"bitwise : BITOR",
"bitwise : BITAND",
"bitwise : BITCOMPL",
"bitwise : BITRSHIFT",
"bitwise : BITLSHIFT",
"bitwise : BITXOR",
"comma : ','",
"comma : comma NL",
"do : DO",
"do : do NL",
"else : ELSE",
"else : else NL",
"$$1 :",
"for : FOR '(' opt_simple_stmt ';' opt_nl pattern ';' opt_nl opt_simple_stmt rparen $$1 stmt",
"$$2 :",
"for : FOR '(' opt_simple_stmt ';' ';' opt_nl opt_simple_stmt rparen $$2 stmt",
"$$3 :",
"for : FOR '(' varname IN varname rparen $$3 stmt",
"funcname : VAR",
"funcname : CALL",
"if : IF '(' pattern rparen",
"lbrace : '{'",
"lbrace : lbrace NL",
"nl : NL",
"nl : nl NL",
"opt_nl :",
"opt_nl : nl",
"opt_pst :",
"opt_pst : pst",
"opt_simple_stmt :",
"opt_simple_stmt : simple_stmt",
"pas : opt_pst",
"pas : opt_pst pa_stats opt_pst",
"pa_pat : pattern",
"pa_stat : pa_pat",
"pa_stat : pa_pat lbrace stmtlist '}'",
"pa_stat : pa_pat ',' opt_nl pa_pat",
"pa_stat : pa_pat ',' opt_nl pa_pat lbrace stmtlist '}'",
"pa_stat : lbrace stmtlist '}'",
"pa_stat : XBEGIN lbrace stmtlist '}'",
"pa_stat : XEND lbrace stmtlist '}'",
"$$4 :",
"pa_stat : FUNC funcname '(' varlist rparen $$4 lbrace stmtlist '}'",
"pa_stats : pa_stat",
"pa_stats : pa_stats opt_pst pa_stat",
"patlist : pattern",
"patlist : patlist comma pattern",
"ppattern : var ASGNOP ppattern",
"ppattern : ppattern '?' ppattern ':' ppattern",
"ppattern : ppattern bor ppattern",
"ppattern : ppattern and ppattern",
"ppattern : ppattern MATCHOP reg_expr",
"ppattern : ppattern MATCHOP ppattern",
"ppattern : ppattern IN varname",
"ppattern : '(' plist ')' IN varname",
"ppattern : ppattern term",
"ppattern : re",
"ppattern : term",
"pattern : var ASGNOP pattern",
"pattern : pattern '?' pattern ':' pattern",
"pattern : pattern bor pattern",
"pattern : pattern and pattern",
"pattern : pattern EQ pattern",
"pattern : pattern GE pattern",
"pattern : pattern GT pattern",
"pattern : pattern LE pattern",
"pattern : pattern LT pattern",
"pattern : pattern NE pattern",
"pattern : pattern MATCHOP reg_expr",
"pattern : pattern MATCHOP pattern",
"pattern : pattern IN varname",
"pattern : '(' plist ')' IN varname",
"pattern : pattern '|' GETLINE var",
"pattern : pattern '|' GETLINE",
"pattern : pattern term",
"pattern : re",
"pattern : term",
"plist : pattern comma pattern",
"plist : plist comma pattern",
"pplist : ppattern",
"pplist : pplist comma ppattern",
"prarg :",
"prarg : pplist",
"prarg : '(' plist ')'",
"print : PRINT",
"print : PRINTF",
"pst : NL",
"pst : ';'",
"pst : pst NL",
"pst : pst ';'",
"rbrace : '}'",
"rbrace : rbrace NL",
"re : reg_expr",
"re : NOT re",
"$$5 :",
"reg_expr : '/' $$5 REGEXPR '/'",
"rparen : ')'",
"rparen : rparen NL",
"simple_stmt : print prarg '|' term",
"simple_stmt : print prarg APPEND ppattern",
"simple_stmt : print prarg GT ppattern",
"simple_stmt : print prarg",
"simple_stmt : DELETE varname '[' patlist ']'",
"simple_stmt : DELETE varname",
"simple_stmt : pattern",
"simple_stmt : error",
"st : nl",
"st : ';' opt_nl",
"stmt : BREAK st",
"stmt : CONTINUE st",
"$$6 :",
"$$7 :",
"stmt : do $$6 stmt $$7 WHILE '(' pattern ')' st",
"stmt : EXIT pattern st",
"stmt : EXIT st",
"stmt : for",
"stmt : if stmt else stmt",
"stmt : if stmt",
"stmt : lbrace stmtlist rbrace",
"stmt : NEXT st",
"stmt : NEXTFILE st",
"stmt : RETURN pattern st",
"stmt : RETURN st",
"stmt : simple_stmt st",
"$$8 :",
"stmt : while $$8 stmt",
"stmt : ';' opt_nl",
"stmt : VAR st",
"stmtlist : stmt",
"stmtlist : stmtlist stmt",
"subop : SUB",
"subop : GSUB",
"term : term '/' ASGNOP term",
"term : term '+' term",
"term : term '-' term",
"term : term '*' term",
"term : term '/' term",
"term : term '%' term",
"term : term POWER term",
"term : '-' term",
"term : '+' term",
"term : NOT term",
"term : BLTIN '(' ')'",
"term : BLTIN '(' patlist ')'",
"term : BLTIN",
"term : CALL '(' ')'",
"term : CALL '(' patlist ')'",
"term : CLOSE term",
"term : DECR var",
"term : INCR var",
"term : var DECR",
"term : var INCR",
"term : GETLINE var LT term",
"term : GETLINE LT term",
"term : GETLINE var",
"term : GETLINE",
"term : bitwise '(' pattern comma pattern ')'",
"term : BITCOMPL '(' pattern ')'",
"term : INDEX '(' pattern comma pattern ')'",
"term : INDEX '(' pattern comma reg_expr ')'",
"term : '(' pattern ')'",
"term : MATCHFCN '(' pattern comma reg_expr ')'",
"term : MATCHFCN '(' pattern comma pattern ')'",
"term : NUMBER",
"term : SPLIT '(' pattern comma varname comma pattern ')'",
"term : SPLIT '(' pattern comma varname comma reg_expr ')'",
"term : SPLIT '(' pattern comma varname ')'",
"term : SPRINTF '(' patlist ')'",
"term : STRING",
"term : subop '(' reg_expr comma pattern ')'",
"term : subop '(' pattern comma pattern ')'",
"term : subop '(' reg_expr comma pattern comma var ')'",
"term : subop '(' pattern comma pattern comma var ')'",
"term : SUBSTR '(' pattern comma pattern comma pattern ')'",
"term : SUBSTR '(' pattern comma pattern ')'",
"term : var",
"var : varname",
"var : varname '[' patlist ']'",
"var : IVAR",
"var : INDIRECT term",
"varlist :",
"varlist : VAR",
"varlist : varlist comma VAR",
"varname : VAR",
"varname : ARG",
"varname : VARNF",
"varname : VARERR",
"while : WHILE '(' pattern rparen",

};
#endif
#if YYDEBUG
#include <stdio.h>
#endif

/* define the initial stack-sizes */
#ifdef YYSTACKSIZE
#undef YYMAXDEPTH
#define YYMAXDEPTH  YYSTACKSIZE
#else
#ifdef YYMAXDEPTH
#define YYSTACKSIZE YYMAXDEPTH
#else
#define YYSTACKSIZE 500
#define YYMAXDEPTH  500
#endif
#endif

#define YYINITSTACKSIZE 500

int    yydebug;
int    yynerrs;

typedef struct {
  unsigned stacksize;
  short  *s_base;
  short  *s_mark;
  short  *s_last;
  YYSTYPE  *l_base;
  YYSTYPE  *l_mark;
} YYSTACKDATA;

#define YYPURE 0

int    yyerrflag;
int    yychar;
YYSTYPE  yyval;
YYSTYPE  yylval;

/* variables for the parser stack */
static YYSTACKDATA yystack;
#line 459 "awkgram.y"

void setfname(Cell *p)
{
  if (isarr(p))
    SYNTAX("%s is an array, not a function", p->nval);
  else if (isfcn(p))
    SYNTAX("you can't define function %s more than once", p->nval);
  curfname = p->nval;
}

int constnode(Node *p)
{
  return isvalue(p) && ((Cell *) (p->narg[0]))->csub == CCON;
}

char *strnode(Node *p)
{
  return ((Cell *)(p->narg[0]))->sval;
}

Node *notnull(Node *n)
{
  switch (n->nobj) {
  case LE: case LT: case EQ: case NE: case GT: case GE:
  case BOR: case AND: case NOT:
    return n;
  default:
    return op2(NE, n, nullnode);
  }
}

void checkdup(Node *vl, Cell *cp)  /* check if name already in list */
{
  char *s = cp->nval;
  for ( ; vl; vl = vl->nnext) {
    if (strcmp(s, ((Cell *)(vl->narg[0]))->nval) == 0) {
      SYNTAX("duplicate argument %s", s);
      break;
    }
  }
}
#line 2815 "y.tab.c"
/* allocate initial stack or double stack size, up to YYMAXDEPTH */
static int yygrowstack(YYSTACKDATA *data)
{
  int i;
  unsigned newsize;
  short *newss;
  YYSTYPE *newvs;

  if ((newsize = data->stacksize) == 0)
    newsize = YYINITSTACKSIZE;
  else if (newsize >= YYMAXDEPTH)
    return -1;
  else if ((newsize *= 2) > YYMAXDEPTH)
    newsize = YYMAXDEPTH;

  i = data->s_mark - data->s_base;
  newss = (data->s_base != 0)
      ? (short *)realloc(data->s_base, newsize * sizeof(*newss))
      : (short *)malloc(newsize * sizeof(*newss));
  if (newss == 0)
    return -1;

  data->s_base  = newss;
  data->s_mark = newss + i;

  newvs = (data->l_base != 0)
      ? (YYSTYPE *)realloc(data->l_base, newsize * sizeof(*newvs))
      : (YYSTYPE *)malloc(newsize * sizeof(*newvs));
  if (newvs == 0)
    return -1;

  data->l_base = newvs;
  data->l_mark = newvs + i;

  data->stacksize = newsize;
  data->s_last = data->s_base + newsize - 1;
  return 0;
}

#if YYPURE || defined(YY_NO_LEAKS)
static void yyfreestack(YYSTACKDATA *data)
{
  free(data->s_base);
  free(data->l_base);
  memset(data, 0, sizeof(*data));
}
#else
#define yyfreestack(data) /* nothing */
#endif

#define YYABORT  goto yyabort
#define YYREJECT goto yyabort
#define YYACCEPT goto yyaccept
#define YYERROR  goto yyerrlab

int
YYPARSE_DECL()
{
  int yym, yyn, yystate;
#if YYDEBUG
  const char *yys;

  if ((yys = getenv("YYDEBUG")) != 0)
  {
    yyn = *yys;
    if (yyn >= '0' && yyn <= '9')
      yydebug = yyn - '0';
  }
#endif

  yynerrs = 0;
  yyerrflag = 0;
  yychar = YYEMPTY;
  yystate = 0;

#if YYPURE
  memset(&yystack, 0, sizeof(yystack));
#endif

  if (yystack.s_base == NULL && yygrowstack(&yystack)) goto yyoverflow;
  yystack.s_mark = yystack.s_base;
  yystack.l_mark = yystack.l_base;
  yystate = 0;
  *yystack.s_mark = 0;

yyloop:
  if ((yyn = yydefred[yystate]) != 0) goto yyreduce;
  if (yychar < 0)
  {
    if ((yychar = yylex()) < 0) yychar = 0;
#if YYDEBUG
    if (yydebug)
    {
      yys = 0;
      if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
      if (!yys) yys = "illegal-symbol";
      printf("%sdebug: state %d, reading %d (%s)\n",
          YYPREFIX, yystate, yychar, yys);
    }
#endif
  }
  if ((yyn = yysindex[yystate]) && (yyn += yychar) >= 0 &&
      yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
  {
#if YYDEBUG
    if (yydebug)
      printf("%sdebug: state %d, shifting to state %d\n",
          YYPREFIX, yystate, yytable[yyn]);
#endif
    if (yystack.s_mark >= yystack.s_last && yygrowstack(&yystack))
    {
      goto yyoverflow;
    }
    yystate = yytable[yyn];
    *++yystack.s_mark = yytable[yyn];
    *++yystack.l_mark = yylval;
    yychar = YYEMPTY;
    if (yyerrflag > 0)  --yyerrflag;
    goto yyloop;
  }
  if ((yyn = yyrindex[yystate]) && (yyn += yychar) >= 0 &&
      yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
  {
    yyn = yytable[yyn];
    goto yyreduce;
  }
  if (yyerrflag) goto yyinrecovery;

  yyerror("syntax error");

  goto yyerrlab;

yyerrlab:
  ++yynerrs;

yyinrecovery:
  if (yyerrflag < 3)
  {
    yyerrflag = 3;
    for (;;)
    {
      if ((yyn = yysindex[*yystack.s_mark]) && (yyn += YYERRCODE) >= 0 &&
          yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)
      {
#if YYDEBUG
        if (yydebug)
          printf("%sdebug: state %d, error recovery shifting\
 to state %d\n", YYPREFIX, *yystack.s_mark, yytable[yyn]);
#endif
        if (yystack.s_mark >= yystack.s_last && yygrowstack(&yystack))
        {
          goto yyoverflow;
        }
        yystate = yytable[yyn];
        *++yystack.s_mark = yytable[yyn];
        *++yystack.l_mark = yylval;
        goto yyloop;
      }
      else
      {
#if YYDEBUG
        if (yydebug)
          printf("%sdebug: error recovery discarding state %d\n",
              YYPREFIX, *yystack.s_mark);
#endif
        if (yystack.s_mark <= yystack.s_base) goto yyabort;
        --yystack.s_mark;
        --yystack.l_mark;
      }
    }
  }
  else
  {
    if (yychar == 0) goto yyabort;
#if YYDEBUG
    if (yydebug)
    {
      yys = 0;
      if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
      if (!yys) yys = "illegal-symbol";
      printf("%sdebug: state %d, error recovery discards token %d (%s)\n",
          YYPREFIX, yystate, yychar, yys);
    }
#endif
    yychar = YYEMPTY;
    goto yyloop;
  }

yyreduce:
#if YYDEBUG
  if (yydebug)
    printf("%sdebug: state %d, reducing by rule %d (%s)\n",
        YYPREFIX, yystate, yyn, yyrule[yyn]);
#endif
  yym = yylen[yyn];
  if (yym)
    yyval = yystack.l_mark[1-yym];
  else
    memset(&yyval, 0, sizeof yyval);
  switch (yyn)
  {
case 1:
#line 101 "awkgram.y"
  { if (errorflag==0)
      winner = (Node *)stat3(PROGRAM, beginloc, yystack.l_mark[0].p, endloc); }
break;
case 2:
#line 103 "awkgram.y"
  { yyclearin; bracecheck(); SYNTAX("bailing out"); }
break;
case 19:
#line 131 "awkgram.y"
  {inloop++;}
break;
case 20:
#line 132 "awkgram.y"
  { --inloop; yyval.p = stat4(FOR, yystack.l_mark[-9].p, notnull(yystack.l_mark[-6].p), yystack.l_mark[-3].p, yystack.l_mark[0].p); }
break;
case 21:
#line 133 "awkgram.y"
  {inloop++;}
break;
case 22:
#line 134 "awkgram.y"
  { --inloop; yyval.p = stat4(FOR, yystack.l_mark[-7].p, NIL, yystack.l_mark[-3].p, yystack.l_mark[0].p); }
break;
case 23:
#line 135 "awkgram.y"
  {inloop++;}
break;
case 24:
#line 136 "awkgram.y"
  { --inloop; yyval.p = stat3(IN, yystack.l_mark[-5].p, makearr(yystack.l_mark[-3].p), yystack.l_mark[0].p); }
break;
case 25:
#line 140 "awkgram.y"
  { setfname(yystack.l_mark[0].cp); }
break;
case 26:
#line 141 "awkgram.y"
  { setfname(yystack.l_mark[0].cp); }
break;
case 27:
#line 145 "awkgram.y"
  { yyval.p = notnull(yystack.l_mark[-1].p); }
break;
case 32:
#line 157 "awkgram.y"
  { yyval.i = 0; }
break;
case 34:
#line 162 "awkgram.y"
  { yyval.i = 0; }
break;
case 36:
#line 168 "awkgram.y"
  { yyval.p = 0; }
break;
case 38:
#line 173 "awkgram.y"
  { yyval.p = 0; }
break;
case 39:
#line 174 "awkgram.y"
  { yyval.p = yystack.l_mark[-1].p; }
break;
case 40:
#line 178 "awkgram.y"
  { yyval.p = notnull(yystack.l_mark[0].p); }
break;
case 41:
#line 182 "awkgram.y"
  { yyval.p = stat2(PASTAT, yystack.l_mark[0].p, stat2(PRINT, rectonode(), NIL)); }
break;
case 42:
#line 183 "awkgram.y"
  { yyval.p = stat2(PASTAT, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 43:
#line 184 "awkgram.y"
  { yyval.p = pa2stat(yystack.l_mark[-3].p, yystack.l_mark[0].p, stat2(PRINT, rectonode(), NIL)); }
break;
case 44:
#line 185 "awkgram.y"
  { yyval.p = pa2stat(yystack.l_mark[-6].p, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 45:
#line 186 "awkgram.y"
  { yyval.p = stat2(PASTAT, NIL, yystack.l_mark[-1].p); }
break;
case 46:
#line 188 "awkgram.y"
  { beginloc = linkum(beginloc, yystack.l_mark[-1].p); yyval.p = 0; }
break;
case 47:
#line 190 "awkgram.y"
  { endloc = linkum(endloc, yystack.l_mark[-1].p); yyval.p = 0; }
break;
case 48:
#line 191 "awkgram.y"
  {infunc++;}
break;
case 49:
#line 192 "awkgram.y"
  { infunc--; curfname=0; defn((Cell *)yystack.l_mark[-7].p, yystack.l_mark[-5].p, yystack.l_mark[-1].p); yyval.p = 0; }
break;
case 51:
#line 197 "awkgram.y"
  { yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 53:
#line 202 "awkgram.y"
  { yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 54:
#line 206 "awkgram.y"
  { yyval.p = op2(yystack.l_mark[-1].i, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 55:
#line 208 "awkgram.y"
  { yyval.p = op3(CONDEXPR, notnull(yystack.l_mark[-4].p), yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 56:
#line 210 "awkgram.y"
  { yyval.p = op2(BOR, notnull(yystack.l_mark[-2].p), notnull(yystack.l_mark[0].p)); }
break;
case 57:
#line 212 "awkgram.y"
  { yyval.p = op2(AND, notnull(yystack.l_mark[-2].p), notnull(yystack.l_mark[0].p)); }
break;
case 58:
#line 213 "awkgram.y"
  { yyval.p = op3(yystack.l_mark[-1].i, NIL, yystack.l_mark[-2].p, (Node*)makedfa(yystack.l_mark[0].s, 0)); }
break;
case 59:
#line 215 "awkgram.y"
  { if (constnode(yystack.l_mark[0].p))
      yyval.p = op3(yystack.l_mark[-1].i, NIL, yystack.l_mark[-2].p, (Node*)makedfa(strnode(yystack.l_mark[0].p), 0));
      else
      yyval.p = op3(yystack.l_mark[-1].i, (Node *)1, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 60:
#line 219 "awkgram.y"
  { yyval.p = op2(INTEST, yystack.l_mark[-2].p, makearr(yystack.l_mark[0].p)); }
break;
case 61:
#line 220 "awkgram.y"
  { yyval.p = op2(INTEST, yystack.l_mark[-3].p, makearr(yystack.l_mark[0].p)); }
break;
case 62:
#line 221 "awkgram.y"
  { yyval.p = op2(CAT, yystack.l_mark[-1].p, yystack.l_mark[0].p); }
break;
case 65:
#line 227 "awkgram.y"
  { yyval.p = op2(yystack.l_mark[-1].i, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 66:
#line 229 "awkgram.y"
  { yyval.p = op3(CONDEXPR, notnull(yystack.l_mark[-4].p), yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 67:
#line 231 "awkgram.y"
  { yyval.p = op2(BOR, notnull(yystack.l_mark[-2].p), notnull(yystack.l_mark[0].p)); }
break;
case 68:
#line 233 "awkgram.y"
  { yyval.p = op2(AND, notnull(yystack.l_mark[-2].p), notnull(yystack.l_mark[0].p)); }
break;
case 69:
#line 234 "awkgram.y"
  { yyval.p = op2(yystack.l_mark[-1].i, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 70:
#line 235 "awkgram.y"
  { yyval.p = op2(yystack.l_mark[-1].i, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 71:
#line 236 "awkgram.y"
  { yyval.p = op2(yystack.l_mark[-1].i, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 72:
#line 237 "awkgram.y"
  { yyval.p = op2(yystack.l_mark[-1].i, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 73:
#line 238 "awkgram.y"
  { yyval.p = op2(yystack.l_mark[-1].i, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 74:
#line 239 "awkgram.y"
  { yyval.p = op2(yystack.l_mark[-1].i, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 75:
#line 240 "awkgram.y"
  { yyval.p = op3(yystack.l_mark[-1].i, NIL, yystack.l_mark[-2].p, (Node*)makedfa(yystack.l_mark[0].s, 0)); }
break;
case 76:
#line 242 "awkgram.y"
  { if (constnode(yystack.l_mark[0].p))
      yyval.p = op3(yystack.l_mark[-1].i, NIL, yystack.l_mark[-2].p, (Node*)makedfa(strnode(yystack.l_mark[0].p), 0));
      else
      yyval.p = op3(yystack.l_mark[-1].i, (Node *)1, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 77:
#line 246 "awkgram.y"
  { yyval.p = op2(INTEST, yystack.l_mark[-2].p, makearr(yystack.l_mark[0].p)); }
break;
case 78:
#line 247 "awkgram.y"
  { yyval.p = op2(INTEST, yystack.l_mark[-3].p, makearr(yystack.l_mark[0].p)); }
break;
case 79:
#line 248 "awkgram.y"
  { 
      if (safe) SYNTAX("cmd | getline is unsafe");
      else yyval.p = op3(GETLINE, yystack.l_mark[0].p, itonp(yystack.l_mark[-2].i), yystack.l_mark[-3].p); }
break;
case 80:
#line 251 "awkgram.y"
  { 
      if (safe) SYNTAX("cmd | getline is unsafe");
      else yyval.p = op3(GETLINE, (Node*)0, itonp(yystack.l_mark[-1].i), yystack.l_mark[-2].p); }
break;
case 81:
#line 254 "awkgram.y"
  { yyval.p = op2(CAT, yystack.l_mark[-1].p, yystack.l_mark[0].p); }
break;
case 84:
#line 260 "awkgram.y"
  { yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 85:
#line 261 "awkgram.y"
  { yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 87:
#line 266 "awkgram.y"
  { yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 88:
#line 270 "awkgram.y"
  { yyval.p = rectonode(); }
break;
case 90:
#line 272 "awkgram.y"
  { yyval.p = yystack.l_mark[-1].p; }
break;
case 99:
#line 289 "awkgram.y"
  { yyval.p = op3(MATCH, NIL, rectonode(), (Node*)makedfa(yystack.l_mark[0].s, 0)); }
break;
case 100:
#line 290 "awkgram.y"
  { yyval.p = op1(NOT, notnull(yystack.l_mark[0].p)); }
break;
case 101:
#line 294 "awkgram.y"
  {startreg();}
break;
case 102:
#line 294 "awkgram.y"
  { yyval.s = yystack.l_mark[-1].s; }
break;
case 105:
#line 302 "awkgram.y"
  { 
      if (safe) SYNTAX("print | is unsafe");
      else yyval.p = stat3(yystack.l_mark[-3].i, yystack.l_mark[-2].p, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 106:
#line 305 "awkgram.y"
  {
      if (safe) SYNTAX("print >> is unsafe");
      else yyval.p = stat3(yystack.l_mark[-3].i, yystack.l_mark[-2].p, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 107:
#line 308 "awkgram.y"
  {
      if (safe) SYNTAX("print > is unsafe");
      else yyval.p = stat3(yystack.l_mark[-3].i, yystack.l_mark[-2].p, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 108:
#line 311 "awkgram.y"
  { yyval.p = stat3(yystack.l_mark[-1].i, yystack.l_mark[0].p, NIL, NIL); }
break;
case 109:
#line 312 "awkgram.y"
  { yyval.p = stat2(DELETE, makearr(yystack.l_mark[-3].p), yystack.l_mark[-1].p); }
break;
case 110:
#line 313 "awkgram.y"
  { yyval.p = stat2(DELETE, makearr(yystack.l_mark[0].p), 0); }
break;
case 111:
#line 314 "awkgram.y"
  { yyval.p = exptostat(yystack.l_mark[0].p); }
break;
case 112:
#line 315 "awkgram.y"
  { yyclearin; SYNTAX("illegal statement"); }
break;
case 115:
#line 324 "awkgram.y"
  { if (!inloop) SYNTAX("break illegal outside of loops");
          yyval.p = stat1(BREAK, NIL); }
break;
case 116:
#line 326 "awkgram.y"
  {  if (!inloop) SYNTAX("continue illegal outside of loops");
          yyval.p = stat1(CONTINUE, NIL); }
break;
case 117:
#line 328 "awkgram.y"
  {inloop++;}
break;
case 118:
#line 328 "awkgram.y"
  {--inloop;}
break;
case 119:
#line 329 "awkgram.y"
  { yyval.p = stat2(DO, yystack.l_mark[-6].p, notnull(yystack.l_mark[-2].p)); }
break;
case 120:
#line 330 "awkgram.y"
  { yyval.p = stat1(EXIT, yystack.l_mark[-1].p); }
break;
case 121:
#line 331 "awkgram.y"
  { yyval.p = stat1(EXIT, NIL); }
break;
case 123:
#line 333 "awkgram.y"
  { yyval.p = stat3(IF, yystack.l_mark[-3].p, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 124:
#line 334 "awkgram.y"
  { yyval.p = stat3(IF, yystack.l_mark[-1].p, yystack.l_mark[0].p, NIL); }
break;
case 125:
#line 335 "awkgram.y"
  { yyval.p = yystack.l_mark[-1].p; }
break;
case 126:
#line 336 "awkgram.y"
  { if (infunc)
        SYNTAX("next is illegal inside a function");
        yyval.p = stat1(NEXT, NIL); }
break;
case 127:
#line 339 "awkgram.y"
  { if (infunc)
        SYNTAX("nextfile is illegal inside a function");
        yyval.p = stat1(NEXTFILE, NIL); }
break;
case 128:
#line 342 "awkgram.y"
  { yyval.p = stat1(RETURN, yystack.l_mark[-1].p); }
break;
case 129:
#line 343 "awkgram.y"
  { yyval.p = stat1(RETURN, NIL); }
break;
case 131:
#line 345 "awkgram.y"
  {inloop++;}
break;
case 132:
#line 345 "awkgram.y"
  { --inloop; yyval.p = stat2(WHILE, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 133:
#line 346 "awkgram.y"
  { yyval.p = 0; }
break;
case 134:
#line 347 "awkgram.y"
  { yyval.p = 0;}
break;
case 136:
#line 352 "awkgram.y"
  { yyval.p = linkum(yystack.l_mark[-1].p, yystack.l_mark[0].p); }
break;
case 139:
#line 360 "awkgram.y"
  { yyval.p = op2(DIVEQ, yystack.l_mark[-3].p, yystack.l_mark[0].p); }
break;
case 140:
#line 361 "awkgram.y"
  { yyval.p = op2(ADD, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 141:
#line 362 "awkgram.y"
  { yyval.p = op2(MINUS, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 142:
#line 363 "awkgram.y"
  { yyval.p = op2(MULT, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 143:
#line 364 "awkgram.y"
  { yyval.p = op2(DIVIDE, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 144:
#line 365 "awkgram.y"
  { yyval.p = op2(MOD, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 145:
#line 366 "awkgram.y"
  { yyval.p = op2(POWER, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 146:
#line 367 "awkgram.y"
  { yyval.p = op1(UMINUS, yystack.l_mark[0].p); }
break;
case 147:
#line 368 "awkgram.y"
  { yyval.p = yystack.l_mark[0].p; }
break;
case 148:
#line 369 "awkgram.y"
  { yyval.p = op1(NOT, notnull(yystack.l_mark[0].p)); }
break;
case 149:
#line 370 "awkgram.y"
  { yyval.p = op2(BLTIN, itonp(yystack.l_mark[-2].i), rectonode()); }
break;
case 150:
#line 371 "awkgram.y"
  { yyval.p = op2(BLTIN, itonp(yystack.l_mark[-3].i), yystack.l_mark[-1].p); }
break;
case 151:
#line 372 "awkgram.y"
  { yyval.p = op2(BLTIN, itonp(yystack.l_mark[0].i), rectonode()); }
break;
case 152:
#line 373 "awkgram.y"
  { yyval.p = op2(CALL, celltonode(yystack.l_mark[-2].cp,CVAR), NIL); }
break;
case 153:
#line 374 "awkgram.y"
  { yyval.p = op2(CALL, celltonode(yystack.l_mark[-3].cp,CVAR), yystack.l_mark[-1].p); }
break;
case 154:
#line 375 "awkgram.y"
  { yyval.p = op1(CLOSE, yystack.l_mark[0].p); }
break;
case 155:
#line 376 "awkgram.y"
  { yyval.p = op1(PREDECR, yystack.l_mark[0].p); }
break;
case 156:
#line 377 "awkgram.y"
  { yyval.p = op1(PREINCR, yystack.l_mark[0].p); }
break;
case 157:
#line 378 "awkgram.y"
  { yyval.p = op1(POSTDECR, yystack.l_mark[-1].p); }
break;
case 158:
#line 379 "awkgram.y"
  { yyval.p = op1(POSTINCR, yystack.l_mark[-1].p); }
break;
case 159:
#line 380 "awkgram.y"
  { yyval.p = op3(GETLINE, yystack.l_mark[-2].p, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 160:
#line 381 "awkgram.y"
  { yyval.p = op3(GETLINE, NIL, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 161:
#line 382 "awkgram.y"
  { yyval.p = op3(GETLINE, yystack.l_mark[0].p, NIL, NIL); }
break;
case 162:
#line 383 "awkgram.y"
  { yyval.p = op3(GETLINE, NIL, NIL, NIL); }
break;
case 163:
#line 385 "awkgram.y"
  { yyval.p = op2(yystack.l_mark[-5].i, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 164:
#line 387 "awkgram.y"
  { yyval.p = op2(BITCOMPL, yystack.l_mark[-1].p, yystack.l_mark[-1].p); }
break;
case 165:
#line 389 "awkgram.y"
  { yyval.p = op2(INDEX, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 166:
#line 391 "awkgram.y"
  { SYNTAX("index() doesn't permit regular expressions");
      yyval.p = op2(INDEX, yystack.l_mark[-3].p, (Node*)yystack.l_mark[-1].s); }
break;
case 167:
#line 393 "awkgram.y"
  { yyval.p = yystack.l_mark[-1].p; }
break;
case 168:
#line 395 "awkgram.y"
  { yyval.p = op3(MATCHFCN, NIL, yystack.l_mark[-3].p, (Node*)makedfa(yystack.l_mark[-1].s, 1)); }
break;
case 169:
#line 397 "awkgram.y"
  { if (constnode(yystack.l_mark[-1].p))
      yyval.p = op3(MATCHFCN, NIL, yystack.l_mark[-3].p, (Node*)makedfa(strnode(yystack.l_mark[-1].p), 1));
      else
      yyval.p = op3(MATCHFCN, (Node *)1, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 170:
#line 401 "awkgram.y"
  { yyval.p = celltonode(yystack.l_mark[0].cp, CCON); }
break;
case 171:
#line 403 "awkgram.y"
  { yyval.p = op4(SPLIT, yystack.l_mark[-5].p, makearr(yystack.l_mark[-3].p), yystack.l_mark[-1].p, (Node*)STRING); }
break;
case 172:
#line 405 "awkgram.y"
  { yyval.p = op4(SPLIT, yystack.l_mark[-5].p, makearr(yystack.l_mark[-3].p), (Node*)makedfa(yystack.l_mark[-1].s, 1), (Node *)REGEXPR); }
break;
case 173:
#line 407 "awkgram.y"
  { yyval.p = op4(SPLIT, yystack.l_mark[-3].p, makearr(yystack.l_mark[-1].p), NIL, (Node*)STRING); }
break;
case 174:
#line 408 "awkgram.y"
  { yyval.p = op1(yystack.l_mark[-3].i, yystack.l_mark[-1].p); }
break;
case 175:
#line 409 "awkgram.y"
  { yyval.p = celltonode(yystack.l_mark[0].cp, CCON); }
break;
case 176:
#line 411 "awkgram.y"
  { yyval.p = op4(yystack.l_mark[-5].i, NIL, (Node*)makedfa(yystack.l_mark[-3].s, 1), yystack.l_mark[-1].p, rectonode()); }
break;
case 177:
#line 413 "awkgram.y"
  { if (constnode(yystack.l_mark[-3].p))
      yyval.p = op4(yystack.l_mark[-5].i, NIL, (Node*)makedfa(strnode(yystack.l_mark[-3].p), 1), yystack.l_mark[-1].p, rectonode());
      else
      yyval.p = op4(yystack.l_mark[-5].i, (Node *)1, yystack.l_mark[-3].p, yystack.l_mark[-1].p, rectonode()); }
break;
case 178:
#line 418 "awkgram.y"
  { yyval.p = op4(yystack.l_mark[-7].i, NIL, (Node*)makedfa(yystack.l_mark[-5].s, 1), yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 179:
#line 420 "awkgram.y"
  { if (constnode(yystack.l_mark[-5].p))
      yyval.p = op4(yystack.l_mark[-7].i, NIL, (Node*)makedfa(strnode(yystack.l_mark[-5].p), 1), yystack.l_mark[-3].p, yystack.l_mark[-1].p);
      else
      yyval.p = op4(yystack.l_mark[-7].i, (Node *)1, yystack.l_mark[-5].p, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 180:
#line 425 "awkgram.y"
  { yyval.p = op3(SUBSTR, yystack.l_mark[-5].p, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 181:
#line 427 "awkgram.y"
  { yyval.p = op3(SUBSTR, yystack.l_mark[-3].p, yystack.l_mark[-1].p, NIL); }
break;
case 184:
#line 433 "awkgram.y"
  { yyval.p = op2(ARRAY, makearr(yystack.l_mark[-3].p), yystack.l_mark[-1].p); }
break;
case 185:
#line 434 "awkgram.y"
  { yyval.p = op1(INDIRECT, celltonode(yystack.l_mark[0].cp, CVAR)); }
break;
case 186:
#line 435 "awkgram.y"
  { yyval.p = op1(INDIRECT, yystack.l_mark[0].p); }
break;
case 187:
#line 439 "awkgram.y"
  { arglist = yyval.p = 0; }
break;
case 188:
#line 440 "awkgram.y"
  { arglist = yyval.p = celltonode(yystack.l_mark[0].cp,CVAR); }
break;
case 189:
#line 441 "awkgram.y"
  {
      checkdup(yystack.l_mark[-2].p, yystack.l_mark[0].cp);
      arglist = yyval.p = linkum(yystack.l_mark[-2].p,celltonode(yystack.l_mark[0].cp,CVAR)); }
break;
case 190:
#line 447 "awkgram.y"
  { yyval.p = celltonode(yystack.l_mark[0].cp, CVAR); }
break;
case 191:
#line 448 "awkgram.y"
  { yyval.p = op1(ARG, itonp(yystack.l_mark[0].i)); }
break;
case 192:
#line 449 "awkgram.y"
  { yyval.p = op1(VARNF, (Node *) yystack.l_mark[0].cp); }
break;
case 193:
#line 450 "awkgram.y"
  { yyval.p = op1(VARERR, (Node *) yystack.l_mark[0].cp); }
break;
case 194:
#line 455 "awkgram.y"
  { yyval.p = notnull(yystack.l_mark[-1].p); }
break;
#line 3628 "y.tab.c"
  }
  yystack.s_mark -= yym;
  yystate = *yystack.s_mark;
  yystack.l_mark -= yym;
  yym = yylhs[yyn];
  if (yystate == 0 && yym == 0)
  {
#if YYDEBUG
    if (yydebug)
      printf("%sdebug: after reduction, shifting from state 0 to\
 state %d\n", YYPREFIX, YYFINAL);
#endif
    yystate = YYFINAL;
    *++yystack.s_mark = YYFINAL;
    *++yystack.l_mark = yyval;
    if (yychar < 0)
    {
      if ((yychar = yylex()) < 0) yychar = 0;
#if YYDEBUG
      if (yydebug)
      {
        yys = 0;
        if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
        if (!yys) yys = "illegal-symbol";
        printf("%sdebug: state %d, reading %d (%s)\n",
            YYPREFIX, YYFINAL, yychar, yys);
      }
#endif
    }
    if (yychar == 0) goto yyaccept;
    goto yyloop;
  }
  if ((yyn = yygindex[yym]) && (yyn += yystate) >= 0 &&
      yyn <= YYTABLESIZE && yycheck[yyn] == yystate)
    yystate = yytable[yyn];
  else
    yystate = yydgoto[yym];
#if YYDEBUG
  if (yydebug)
    printf("%sdebug: after reduction, shifting from state %d \
to state %d\n", YYPREFIX, *yystack.s_mark, yystate);
#endif
  if (yystack.s_mark >= yystack.s_last && yygrowstack(&yystack))
  {
    goto yyoverflow;
  }
  *++yystack.s_mark = (short) yystate;
  *++yystack.l_mark = yyval;
  goto yyloop;

yyoverflow:
  yyerror("yacc stack overflow");

yyabort:
  yyfreestack(&yystack);
  return (1);

yyaccept:
  yyfreestack(&yystack);
  return (0);
}
