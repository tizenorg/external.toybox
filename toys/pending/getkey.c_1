/* getkey.c - A getkey program.
 *
 * Copyright 2012 Ashwini Kumar <ak.ashwini@gmail.com>
 *
 * Not in SUSv4.
 * See http://opengroup.org/onlinepubs/9699919799/utilities/

USE_GETKEY(NEWTOY(getkey, "m:c#i", TOYFLAG_USR|TOYFLAG_BIN))

config GETKEY
  bool "getkey"
  default n
  help
    usage: getkey [-c seconds] [-i] [-m string] KEYS

    A getkey program to get the desired KEYS input or any key press if KEYS not specified.
*/

#define FOR_getkey
#include "toys.h"
#include <unistd.h>
#include <termios.h>

// Hello doesn't use these globals, they're here for example/skeleton purposes.

GLOBALS(
  long timeout;
  char *fmt_string;
  struct termios inf;
)

void timeout(int x)
{
  tcsetattr(0, TCSANOW, &TT.inf);
  exit(x);
}
void getkey_main(void)
{
  char ch;
  struct termios inf, newf;
  char *list = NULL;

  tcgetattr(0, &inf);
  memcpy(&newf, &inf, sizeof(struct termios));
  memcpy(&TT.inf, &inf, sizeof(struct termios));

  //disable echo
  newf.c_lflag &= ~(ISIG | ICANON );
  tcsetattr(0, TCSANOW, &newf);

  if(toys.optflags & FLAG_c)
  {
      signal(SIGALRM, timeout);
      alarm(TT.timeout);
  }

  if(toys.optflags & FLAG_m)
  {
      fprintf(stderr, TT.fmt_string, TT.timeout);
  }
  list = toys.optargs[0];
  
  while(1)
  {
      if(read(STDIN_FILENO, &ch, 1) != 1)
          continue;
      if(!(toys.optflags & FLAG_i) && (ch == 3 || ch ==4))
          timeout(1);
      if(!list || strchr(list, ch) || strchr(list, toupper(ch)) || strchr(list, tolower(ch)))
      {
          tcsetattr(0, TCSANOW, &inf);
          exit(0);
      }
  }
}
